{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/serverlist/dialogs/confirm/confirmdialog.component.html","webpack:///./src/app/serverlist/dialogs/slconfigdialog.component.html","webpack:///./src/app/serverlist/issues/issues.component.html","webpack:///./src/app/serverlist/server-connect/server-connect.component.html","webpack:///./src/app/serverlist/server-connect/server-connect.dialog.component.html","webpack:///./src/app/serverlist/server-filter-version/server-filter-version.component.html","webpack:///./src/app/serverlist/server-filter/server-filter.component.html","webpack:///./src/app/serverlist/server-top-navigator/server-navigator.component.html","webpack:///./src/app/serverlist/serverdashboard/serverdashboard.component.html","webpack:///./src/app/serverlist/serverlist.component.html","webpack:///./src/app/serverlist/serverversions/serverversions.component.html","webpack:///./src/app/serverlist/table/table.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/serverlist/dialogs/confirm/confirmdialog.component.ts","webpack:///./src/app/serverlist/dialogs/slconfigdialog.component.ts","webpack:///./src/app/serverlist/helper/versioninfo.ts","webpack:///./src/app/serverlist/issues/issues.component.css","webpack:///./src/app/serverlist/issues/issues.component.ts","webpack:///./src/app/serverlist/repository.ts","webpack:///./src/app/serverlist/server-connect/server-connect.component.css","webpack:///./src/app/serverlist/server-connect/server-connect.component.ts","webpack:///./src/app/serverlist/server-connect/server-connect.dialog.component.ts","webpack:///./src/app/serverlist/server-filter-version/server-filter-version.component.css","webpack:///./src/app/serverlist/server-filter-version/server-filter-version.component.ts","webpack:///./src/app/serverlist/server-filter/server-filter.component.css","webpack:///./src/app/serverlist/server-filter/server-filter.component.ts","webpack:///./src/app/serverlist/server-top-navigator/server-navigator.component.css","webpack:///./src/app/serverlist/server-top-navigator/server-navigator.component.ts","webpack:///./src/app/serverlist/serverdashboard/serverdashboard.component.css","webpack:///./src/app/serverlist/serverdashboard/serverdashboard.component.ts","webpack:///./src/app/serverlist/serverlist.component.css","webpack:///./src/app/serverlist/serverlist.component.ts","webpack:///./src/app/serverlist/serverlist.module.ts","webpack:///./src/app/serverlist/serverlist.state.ts","webpack:///./src/app/serverlist/serverversions/serverversions.component.css","webpack:///./src/app/serverlist/serverversions/serverversions.component.ts","webpack:///./src/app/serverlist/services/filter.service.ts","webpack:///./src/app/serverlist/services/jsfunc.service.ts","webpack:///./src/app/serverlist/services/serverlist.service.ts","webpack:///./src/app/serverlist/services/sort.service.ts","webpack:///./src/app/serverlist/table/table-column-config.ts","webpack:///./src/app/serverlist/table/table.component.css","webpack:///./src/app/serverlist/table/table.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["module.exports = \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>{{data.title}}</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p>{{data.question}}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"dialogRef.close(false)\\\">No</button>\\r\\n    <button mat-button (click)=\\\"dialogRef.close(true)\\\">Yes</button>\\r\\n</div>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>Configure Columns</h1>\\r\\n<div mat-dialog-content>\\r\\n    <div><button mat-button (click)=\\\"selectAll()\\\">Set all</button>\\r\\n    <button class=\\\"ml-1 mb-3\\\" mat-button  (click)=\\\"clearAll()\\\">Clear all</button></div>\\r\\n    <div *ngFor=\\\"let col of colToConfig\\\">\\r\\n        <mat-checkbox [(ngModel)]=\\\"col.visible\\\">{{col.tableColumns.caption}}</mat-checkbox>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"center\\\">\\r\\n    <!--<button mat-button [mat-dialog-close]=\\\"data.columns\\\">Close</button>-->\\r\\n    <!--<button mat-button [mat-dialog-close]=\\\"data.colToConfig\\\">Ok</button>-->\\r\\n    <button mat-button (click)=\\\"onClick()\\\">Close</button>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"card border-dark mb-0 mt-1\\\" style=\\\"display:inline-block;\\\" id=\\\"issueAccordion\\\">\\r\\n    <div *ngIf=\\\"issuesData as issues; else loading\\\">\\r\\n        <!-- Issue card -->\\r\\n        <div [ngClass]=\\\"issueCount > 0 ? 'card-header bg-danger text-white': 'card-header'\\\" id=\\\"issueHeading\\\">\\r\\n            <div class=\\\"cardTitle\\\">\\r\\n                <h5>\\r\\n                    Issues ({{issueCount | number}})\\r\\n                    <i [ngClass]=\\\"getHeaderClass()\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseIssueTable\\\" (click)=\\\"expanded = !expanded\\\"></i>\\r\\n                </h5>\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"collapse\\\" id=\\\"collapseIssueTable\\\" data-parent=\\\"#issueAccordion\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"mb-2 mt-0\\\" (click)=\\\"deleteSelected()\\\">Delete selected</button>\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"mb-2 mt-0 ml-2\\\" (click)=\\\"refreshIssues()\\\">\\r\\n                    Refresh <span *ngIf=\\\"issueCount != issues.length\\\">(New Items available)</span>\\r\\n                </button>\\r\\n                <i *ngIf=\\\"isRefreshing\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\r\\n                <span *ngIf=\\\"!isRefreshing\\\" class=\\\"ml-2\\\">Last refresh: {{ lastRefresh | date:'medium'}}</span>\\r\\n                <h5>Filter:</h5>\\r\\n                <select class=\\\"mb-1\\\" [(value)]=\\\"serverFilter\\\" onchange=\\\"selectChange($event)\\\">\\r\\n                    <option>Show all</option>\\r\\n                    <option *ngFor=\\\"let server of serversWithIssues\\\" value=\\\"server\\\">\\r\\n                        {{server}}\\r\\n                    </option>\\r\\n                </select>\\r\\n\\r\\n\\r\\n                <table class=\\\"table\\\" id=\\\"issueTable\\\">\\r\\n                    <thead class=\\\"thead-light\\\">\\r\\n                        <tr>\\r\\n                            <th><mat-checkbox (change)=\\\"selectAll($event)\\\"></mat-checkbox></th>\\r\\n                            <th></th>\\r\\n                            <th *ngFor=\\\"let col of tableCols; let i=index\\\"\\r\\n                                (click)=\\\"setSort(i)\\\"\\r\\n                                [ngClass]=\\\"{'unsortable': !col.Sortable}\\\"\\r\\n                                matTooltip={{col.toolTip}}>\\r\\n                                {{col.caption}}<span [ngClass]=\\\"getSortClass(i)\\\"></span>\\r\\n                            </th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <ng-container *ngFor=\\\"let issue of sortSrv.sortObject(issues, currentSortColName, isAsc); let i=index\\\">\\r\\n                            <tr>\\r\\n                                <td><mat-checkbox [(ngModel)]=\\\"issue.recordSelected\\\"></mat-checkbox></td>\\r\\n                                <td><button mat-raised-button color=\\\"primary\\\" (click)=\\\"sendContinue(issue.serverID)\\\">Continue</button></td>\\r\\n                                <td *ngFor=\\\"let col of tableCols; let i=index\\\">\\r\\n                                    {{ isColDateTime(i) ? (issue[col.colName] | date:'medium') : (issue[col.colName]) }}\\r\\n                                </td>\\r\\n                                <td><button mat-raised-button color=\\\"primary\\\" (click)=\\\"loadYellowBox(issue.serverID, issue.fileName, i)\\\">YB</button></td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"issue.expanded\\\">\\r\\n                                <td id=\\\"yellowBox\\\" colspan=\\\"5\\\">\\r\\n                                    <span *ngIf=\\\"issue.yellowBox\\\">{{issue.yellowBox}}</span>\\r\\n                                    <div *ngIf=\\\"!issue.yellowBox\\\">\\r\\n                                        <span>Loading...</span>\\r\\n                                        <mat-spinner></mat-spinner>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </ng-container>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n    </div>\\r\\n    </div>\\r\\n    <ng-template #loading>\\r\\n        <div class=\\\"p-1\\\" style=\\\"text-align:center;\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n        <div><h5>Loading issues...</h5></div>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\\r\\n\"","module.exports = \"<ng-template [ngIf]=\\\"isLoading || serverListConn === undefined\\\">Loading\\r\\n    </ng-template>\\r\\n<ng-template [ngIf]=\\\"!isLoading\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n        <mat-tab-group>\\r\\n                <mat-tab label=\\\"VPN Connection\\\" class=\\\"mt-1\\\">\\r\\n                    <div class=\\\"col-2\\\">\\r\\n                        <label>VPN:</label>\\r\\n                        <label>VPN User:</label>\\r\\n                        <label>VPN Pass:</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"VPN\\\" type=\\\"text\\\" readonly class=\\\"ml-1\\\" matTooltip=\\\"Click to copy\\\"\\r\\n                                   #vpnConnect [value]=\\\"serverListConn?.vpnConnect ? serverListConn?.vpnConnect : ''\\\" (click)=\\\"copyToClipboard(vpnConnect)\\\" />\\r\\n                        </mat-form-field>\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" #vpnUser [value]=\\\"serverListConn?.vpnUser ? serverListConn?.vpnUser : ''\\\"\\r\\n                               (click)=\\\"copyToClipboard(vpnUser)\\\" matTooltip=\\\"Click to copy\\\" />\\r\\n                    \\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" #vpnPassword [value]=\\\"serverListConn?.vpnPassword ? serverListConn?.vpnPassword : ''\\\"\\r\\n                               (click)=\\\"copyToClipboard(vpnPassword)\\\" matTooltip=\\\"Click to copy\\\" />\\r\\n                    </div>\\r\\n                </mat-tab>\\r\\n            \\r\\n                <mat-tab label=\\\"Windows Connection\\\">\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                        <label>WinDomain:</label>\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" matTooltip=\\\"Click to copy\\\"\\r\\n                               #winDomain [value]=\\\"serverListConn?.winDomain ? serverListConn?.winDomain : ''\\\" (click)=\\\"copyToClipboard(serverListConn?.winDomain)\\\" />\\r\\n                        <label class=\\\"ml-1\\\">IP:</label>\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" matTooltip=\\\"Click to copy\\\"\\r\\n                               #winDomain [value]=\\\"serverListConn?.rDPInternalIP ? serverListConn?.rDPInternalIP : ''\\\" (click)=\\\"copyToClipboard(serverListConn?.rDPInternalIP)\\\" />\\r\\n\\r\\n                        <label class=\\\"ml-1\\\">WinLogon:</label>\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" #winLogon [value]=\\\"serverListConn?.winLogon ? serverListConn?.winLogon : ''\\\"\\r\\n                               (click)=\\\"copyToClipboard(serverListConn?.winLogon)\\\" matTooltip=\\\"Click to copy\\\" />\\r\\n                        <label class=\\\"ml-1\\\">WinPass:</label>\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" #winPassword [value]=\\\"serverListConn?.winPassword ? serverListConn?.winPassword : ''\\\"\\r\\n                               (click)=\\\"copyToClipboard(serverListConn?.winPassword)\\\" matTooltip=\\\"Click to copy\\\" />\\r\\n\\r\\n                    </div>\\r\\n                </mat-tab>>\\r\\n            \\r\\n                <mat-tab label=\\\"Email\\\">\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                        <label>Email1:</label>\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" #email1 [value]=\\\"serverListConn?.email1 ? serverListConn?.email1 : ''\\\"\\r\\n                               (click)=\\\"copyToClipboard(email1)\\\" matTooltip=\\\"Click to copy\\\" />\\r\\n                        <label class=\\\"ml-1\\\">Email2:</label>\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" #email2 [value]=\\\"serverListConn?.email2 ? serverListConn?.email2 : ''\\\"\\r\\n                               (click)=\\\"copyToClipboard(email2)\\\" matTooltip=\\\"Click to copy\\\" />\\r\\n                        <label class=\\\"ml-1\\\">Email3:</label>\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" #email3 [value]=\\\"serverListConn?.email3 ? serverListConn?.email3 : ''\\\"\\r\\n                               (click)=\\\"copyToClipboard(email3)\\\" matTooltip=\\\"Click to copy\\\" />\\r\\n                        <label class=\\\"ml-1\\\">Email4:</label>\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"ml-1\\\" #email4 [value]=\\\"serverListConn?.email4 ? serverListConn?.email4 : ''\\\"\\r\\n                               (click)=\\\"copyToClipboard(email4)\\\" matTooltip=\\\"Click to copy\\\" />\\r\\n\\r\\n                    </div>\\r\\n                </mat-tab>\\r\\n            \\r\\n        </mat-tab-group>\\r\\n        </div>\\r\\n    </div>\\r\\n     \\r\\n</ng-template>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>Connection info</h1>\\r\\n<div mat-dialog-content>\\r\\n    \\r\\n        <server-connect [serverId]=\\\"serverId\\\"></server-connect>\\r\\n    \\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"center\\\">\\r\\n    <!--<button mat-button [mat-dialog-close]=\\\"data.columns\\\">Close</button>-->\\r\\n    <!--<button mat-button [mat-dialog-close]=\\\"data.colToConfig\\\">Ok</button>-->\\r\\n    <button mat-button (click)=\\\"onClick()\\\">Close</button>\\r\\n</div>\\r\\n\"","module.exports = \"<mat-form-field class=\\\"mt-2\\\">\\r\\n    <mat-select placeholder=\\\"Select {{labelInfo}} version\\\" [(ngModel)]=\\\"selected\\\" (selectionChange)=\\\"onChangeVersion()\\\">\\r\\n        <mat-option value=\\\"\\\">Show all</mat-option>\\r\\n        <mat-option *ngFor=\\\"let version of sortSrv.sortObject(versionInfo, 'sortV', false); let i = index\\\" [value]=\\\"version?.versionNum\\\">\\r\\n            <span>{{version?.versionDisplay}}</span><span class=\\\"badge badge-primary badge-pill ml-1\\\">{{version?.countV}}</span>\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\\r\\n\"","module.exports = \"<div class=\\\"mt-1 p-1\\\">\\r\\n    <button class=\\\"btn btn-block btn-outline-primary m-a-2\\\" (click)=changeCategory(0) [class.active]=\\\"currentCategory==0\\\">\\r\\n        Show all\\r\\n    </button>\\r\\n    <button *ngFor=\\\"let cat of categories\\\" class=\\\"btn btn-outline-primary btn-block ma-2\\\"\\r\\n      (click)=changeCategory(cat.advServerCategoryID) [class.active]=\\\"cat.advServerCategoryID==currentCategory\\\" >\\r\\n        {{cat.description}}\\r\\n    </button>   \\r\\n</div>\\r\\n\"","module.exports = \"\\r\\n<input type=\\\"search\\\" id=\\\"searchBox\\\"  (input)=\\\"onSearchType($event.target.value)\\\" [placeholder]=\\\"!notIn ? 'Server name...' : 'Not server name...'\\\">\\r\\n\"","module.exports = \"<div class=\\\"navContent container-fluid\\\" style=\\\"height:1000px;min-height:750px;width:auto\\\">\\r\\n    <!--Header row-->\\r\\n    <!-- Issue row -->\\r\\n    <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <issues></issues> <!-- Issue card-->\\r\\n        </div> <!-- column -->\\r\\n    </div>\\r\\n    <!-- End of issues-->\\r\\n    <!-- Server list-->\\r\\n    <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <serverlist></serverlist>\\r\\n        </div> <!-- column -->\\r\\n\\r\\n    </div> <!--row-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <serverversions></serverversions>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button id=\\\"scrollButton\\\" [ngClass]=\\\"{'show-scroll': showScroll}\\\" (click)=\\\"scrollToTop()\\\" class=\\\"scroll-to-top\\\">\\r\\n        Scroll To Top\\r\\n    </button>\\r\\n</div> <!--navContent-->\\r\\n        <!--End of main content-->\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"card border-dark mb-0\\\" style=\\\"display:inline-block;\\\" id=\\\"accordionServer\\\">\\r\\n    <div *ngIf=\\\"!serverLstSrv.isLoading; else loading\\\">\\r\\n        <!-- Header-->\\r\\n        <div class=\\\"card-header\\\" id=\\\"serverHeading\\\">\\r\\n            <div class=\\\"cardTitle\\\">\\r\\n                <h5>\\r\\n                    {{cardTitle}}\\r\\n                    <i [ngClass]=\\\"getHeaderClass()\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseServerTable\\\" (click)=\\\"expanded = !expanded\\\"></i>\\r\\n                </h5>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--End of card header -->\\r\\n        <!--Server table-->\\r\\n        <div class=\\\"collapse\\\" id=\\\"collapseServerTable\\\" data-parent=\\\"#accordionServer\\\">\\r\\n            <div class=\\\"card-body p-0\\\">\\r\\n                <div class=\\\"col-12 mt-1\\\">\\r\\n                    <button type=\\\"button\\\" data-toggle=\\\"collapse\\\" href=\\\"#filterServer\\\"><i class=\\\"fa fa-filter\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n                    <span class=\\\"ml-2\\\"><label>Last Refresh:&nbsp;&nbsp;{{ lastRefresh | date:'medium' }}</label></span>\\r\\n                    <mat-checkbox class=\\\"ml-4\\\" color=\\\"warn\\\" id=\\\"yellowBoxes\\\" [(ngModel)]=\\\"filterYellowBox\\\"\\r\\n                                  (change)=\\\"filterByYellowBox()\\\" matTooltip=\\\"Filter on servers\\\">\\r\\n                        Servers w/issues: {{serversWithIssues || 0}}\\r\\n                    </mat-checkbox>\\r\\n                    <span matTooltip=\\\"Configure columns\\\" class=\\\"ml-5\\\" (click)=\\\"openConfigDialog()\\\">\\r\\n                        <i id=\\\"configCols\\\" class=\\\"fa fa-align-justify\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-12 mt-1 collapse\\\" id=\\\"filterServer\\\">\\r\\n                    <server-navigator></server-navigator>\\r\\n                    <server-navigator [notIn]=\\\"true\\\" class=\\\"ml-1\\\"></server-navigator>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-12 mt-1\\\">\\r\\n                    <table id=\\\"serverTable\\\" class=\\\"table table-bordered table-hover\\\">\\r\\n                        <thead class=\\\"thead-dark\\\">\\r\\n                            <tr>\\r\\n                                <th *ngFor=\\\"let col of serverCols; let i=index\\\"\\r\\n                                    (click)=\\\"setSort(i)\\\"\\r\\n                                    [ngClass]=\\\"{'unsortable': !col.Sortable}\\\"\\r\\n                                    matTooltip={{col.toolTip}}>\\r\\n                                    {{col.caption}}<span [ngClass]=\\\"getSortClass(i)\\\"></span>\\r\\n                                </th>\\r\\n                                <th></th> <!-- Connect button -->\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let server of sortSrv.sortObject(serverList, currentSortColName, isAsc); let i=index\\\" trackBy=\\\"trackByFnc\\\"\\r\\n                                [ngClass]=\\\"{'table-danger': server.yellowBox}\\\" (click)=\\\"setClickedRow(i, server?.serverID)\\\" [class.active]=\\\"i == selectedRow\\\">\\r\\n                                <td *ngFor=\\\"let col of serverCols; let i=index\\\">\\r\\n                                    <div *ngIf=\\\"col.colName == 'serverID'\\\" class=\\\"dropdrown\\\">\\r\\n                                        {{server?.serverID}}\\r\\n                                        <button class=\\\"btn btn-secondary ml-1 dropdown-toggle float-right\\\" type=\\\"button\\\" id=\\\"dropdownMenu2\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                                aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" matTooltip=\\\"Actions\\\"></button>\\r\\n                                        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu2\\\">\\r\\n                                            <button class=\\\"dropdown-item\\\" (click)=\\\"postServerCmd(server?.serverID, 'continue')\\\" type=\\\"button\\\">Send continue</button>\\r\\n                                            <button class=\\\"dropdown-item\\\" [routerLink]=\\\"['/events', server?.advServerID]\\\">View details</button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"col.colName !== 'serverID'\\\">{{ server[col.colName] }}</div>\\r\\n                                </td>\\r\\n                                <td><button class=\\\"btn btn-secondary\\\" (click)=\\\"openConnect()\\\"><i class=\\\"fa fa-handshake-o\\\" aria-hidden=\\\"true\\\"></i></button></td>\\r\\n                            </tr>\\r\\n                        </tbody> <!-- Table body -->\\r\\n                    </table> <!--Server list table-->\\r\\n                    </div>\\r\\n                </div> <!-->card -->\\r\\n            </div>\\r\\n    </div>\\r\\n    <ng-template #loading>\\r\\n        <div class=\\\"p-1\\\" style=\\\"text-align:center;\\\">\\r\\n            <mat-spinner></mat-spinner>\\r\\n            <div><h5>Loading servers...</h5></div>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\\r\\n\"","module.exports = \"  <div class=\\\"card border-dark mb-0\\\" style=\\\"display:inline-block;\\\" id=\\\"accordionServerV\\\">\\r\\n    <div *ngIf=\\\"!isLoading; else loading\\\">\\r\\n        <!-- Header--> \\r\\n        <div class=\\\"card-header\\\" id=\\\"serverVHeading\\\"\\r\\n             href=\\\"#collapseServerVTable\\\">\\r\\n            <div class=\\\"cardTitle\\\">\\r\\n                <h5>\\r\\n                {{cardTitle}}\\r\\n                <i [ngClass]=\\\"getHeaderClass()\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseServerVTable\\\" (click)=\\\"expanded = !expanded\\\"></i>\\r\\n                </h5>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--End of card header -->\\r\\n        <!--Server table-->\\r\\n        <div class=\\\"collapse\\\" id=\\\"collapseServerVTable\\\" data-parent=\\\"#accordionServerV\\\">\\r\\n            <div class=\\\"card-body p-0\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"mt-1 mb-1 ml-1\\\" (click)=\\\"clearFilter()\\\">Clear filter</button>\\r\\n                <table id=\\\"serverVTable\\\" class=\\\"table table-bordered table-hover\\\">\\r\\n                    <thead class=\\\"thead-dark\\\">\\r\\n                        <tr>\\r\\n                            <th *ngFor=\\\"let col of tableCols; let i=index\\\"\\r\\n                                (click)=\\\"setSort(i)\\\"\\r\\n                                [ngClass]=\\\"{'unsortable': !col.Sortable}\\\"\\r\\n                                matTooltip={{col.toolTip}}>\\r\\n                                {{col.caption}}<span [ngClass]=\\\"getSortClass(i)\\\"></span>\\r\\n                            </th>\\r\\n                       </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr class=\\\"table-info p-0\\\">\\r\\n                            <td *ngFor=\\\"let col of tableCols; let i=index\\\" class=\\\"align-middle\\\">\\r\\n                                <div *ngIf=\\\"isComboFilter(col)\\\">\\r\\n                                    <mat-form-field>\\r\\n                                        <mat-select placeholder=\\\"Select {{col.caption}}\\\" [(ngModel)]=\\\"col.filterValue\\\" (selectionChange)=\\\"setFilter()\\\">\\r\\n                                            <mat-option [value]=\\\"\\\">Show all</mat-option>\\r\\n                                            <mat-option *ngFor=\\\"let filter of col.filterValues\\\" [value]=\\\"filter\\\">\\r\\n                                                {{filter}}\\r\\n                                            </mat-option>\\r\\n                                        </mat-select>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                \\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngFor=\\\"let version of sortSrv.sortObject(serverVersions, currentSortColName, isAsc); let i=index\\\" trackBy=\\\"trackByFnc\\\"\\r\\n                            [class.active]=\\\"i == selectedRow\\\" click=\\\"setRow(i)\\\">\\r\\n                            <td *ngFor=\\\"let col of tableCols; let i=index\\\">\\r\\n                                {{ version[col.colName] }}\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody> <!-- Table body -->\\r\\n                </table> <!--Server list table-->\\r\\n            </div> <!-->card -->\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n    <ng-template #loading>\\r\\n        <div class=\\\"p-1\\\" style=\\\"text-align:center;\\\">\\r\\n            <mat-spinner></mat-spinner>\\r\\n            <div><h5>Loading versions...</h5></div>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n    \\r\\n</div>\\r\\n\"","module.exports = \"<table class=\\\"table webTableStyle table-bordered table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th *ngIf=\\\"multiRowSelect\\\"></th>\\r\\n            <ng-container *ngFor=\\\"let col of configurableCols; let i=index\\\">\\r\\n                <th (click)=\\\"setSort(i)\\\" [ngClass]=\\\"{'unsortable': !col.Sortable}\\\" matTooltip={{col.toolTip}}>\\r\\n                    {{col.caption}}<span [ngClass]=\\\"getSortClass(i)\\\"></span>\\r\\n                </th>\\r\\n            </ng-container>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let row of tableData; let i=index\\\">\\r\\n            <td *ngIf=\\\"multiRowSelect\\\"><input type=\\\"checkbox\\\" /></td>\\r\\n            <td *ngFor=\\\"let col of configurableCols; let j=index\\\">\\r\\n                {{ row[col.colName] }}\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ServerListComponent } from './serverlist/serverlist.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ServerlistModule } from './serverlist/serverlist.module';\r\nimport { MaterialModule } from './material.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ServerListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: ServerListComponent, pathMatch: 'full' },\r\n      { path: 'serverlist', component: ServerListComponent }\r\n    ]),\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    ServerlistModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n    MatDialogModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        MatDialogModule\r\n    ],\r\n    exports: [\r\n        MatDialogModule\r\n    ]\r\n  })\r\n  export class MaterialModule { }\r\n  ","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'confirmdialog',\r\n    templateUrl: 'confirmdialog.component.html'\r\n})\r\nexport class ConfirmedDialog {\r\n    constructor(public dialogRef: MatDialogRef<ConfirmedDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: IConfirmedDialogData) { }\r\n\r\n}\r\n\r\nexport interface IConfirmedDialogData {\r\n    question: string;\r\n    title: string;\r\n    confirmed: boolean;\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ITableColConfigState } from '../table/table-column-config';\r\n\r\n@Component({\r\n    selector: 'slconfigdialog',\r\n    templateUrl: 'slconfigdialog.component.html'\r\n})\r\nexport class ServerListConfigDialog {\r\n    constructor(public dialogRef: MatDialogRef<ServerListConfigDialog>, @Inject(MAT_DIALOG_DATA) public columns: ITableColConfigState[]) { }\r\n    \r\n    get colToConfig(): ITableColConfigState[] {\r\n        return this.columns.filter(x => x.tableColumns.nonConfigurable == false);\r\n    }\r\n\r\n    onClick() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    setAll(set: boolean) {\r\n        this.colToConfig.forEach(col => {\r\n            col.visible = set;\r\n        });\r\n    }\r\n\r\n    clearAll() {\r\n        this.setAll(false);\r\n    }\r\n    selectAll() {\r\n        this.setAll(true);\r\n    }\r\n}\r\n","\r\nexport class versionInfo {\r\n    constructor(\r\n        public versionNum: string,\r\n        public countV: number,\r\n        public sortV: number\r\n    ) { };\r\n\r\n    get versionDisplay(): string {\r\n        if (this.versionNum == 'null') {\r\n            return \"None\";\r\n        } else {\r\n            return this.versionNum;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\\r\\n#issueTable {\\r\\n    width:100%;\\r\\n}\\r\\n.cardSmall {\\r\\n    cursor: pointer;\\r\\n    \\r\\n}\\r\\n.card-header {\\r\\n    width: 100%;\\r\\n    \\r\\n}\\r\\n.cardBig {\\r\\n    \\r\\n}\\r\\n.fa-vc {\\r\\n    line-height: inherit !important;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmVybGlzdC9pc3N1ZXMvaXNzdWVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7SUFDSSxlQUFlOztBQUVuQjtBQUVBO0lBQ0ksV0FBVzs7QUFFZjtBQUNBOztBQUVBO0FBRUE7SUFDSSwrQkFBK0I7SUFDL0IsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL3NlcnZlcmxpc3QvaXNzdWVzL2lzc3Vlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbiNpc3N1ZVRhYmxlIHtcclxuICAgIHdpZHRoOjEwMCU7XHJcbn1cclxuLmNhcmRTbWFsbCB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBcclxufVxyXG5cclxuLmNhcmQtaGVhZGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgXHJcbn1cclxuLmNhcmRCaWcge1xyXG4gICAgXHJcbn1cclxuXHJcbi5mYS12YyB7XHJcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdCAhaW1wb3J0YW50O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, OnDestroy, Input, Output } from '@angular/core';\r\nimport { Repository } from '../repository';\r\nimport { CPRIssue, CPRIssueCount } from '../models//CPRIssue.model';\r\n\r\nimport { SortService } from '../services/sort.service';\r\nimport { TableColumnConfig, SortDirection, ITableColConfigState, TableColHepler, DataType, ITableConfigState, TableHelper } from '../table/table-column-config';\r\nimport { Subscription, Observable, interval, pipe, of, forkJoin } from 'rxjs';\r\nimport { switchMap, startWith, map, tap } from 'rxjs/operators';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n    selector: 'issues',\r\n    templateUrl: 'issues.component.html',\r\n    styleUrls: ['issues.component.css']\r\n})\r\nexport class IssuesComponent implements OnInit, OnDestroy {\r\n    private _issuesData: CPRIssue[];\r\n    private _issuesDataFilter: CPRIssue[] = [];\r\n    public expanded: boolean = false;\r\n\r\n    issueCount: number = 0;\r\n\r\n    $issueCount: Subscription = new Subscription();\r\n\r\n    @Output()\r\n    issueOpen: boolean = false;\r\n\r\n    lastRefresh: number = Date.now();\r\n    isRefreshing: boolean = false;\r\n    selIssues: number[];\r\n    timerSub: Subscription = new Subscription();\r\n\r\n    serversWithIssues: string[];\r\n    _serverFilter: string;\r\n\r\n    yellowBoxes: any;\r\n\r\n    deleteCount: number = 0;\r\n\r\n    private _tableConfig: ITableConfigState;\r\n\r\n    private _tableHeader: ITableColConfigState[] = [\r\n        //{\r\n        //    sortDir: SortDirection.NONE, visible: true, sorted: false, orderBy: 0, tableColumns:\r\n        //        new TableColumnConfig({ colName: \"selected\", caption: '', Sortable: false })\r\n        //},\r\n        {\r\n            sortDir: SortDirection.NONE, visible: true, sorted: false, orderBy: 0, tableColumns:\r\n                new TableColumnConfig({ colName: \"serverID\", caption: 'ServerID', Sortable: true })\r\n        },\r\n        {\r\n            sortDir: SortDirection.NONE, visible: true, sorted: false, orderBy: 1, tableColumns:\r\n                new TableColumnConfig({ colName: \"fileName\", caption: 'File name', Sortable: true })\r\n        },\r\n        {\r\n            sortDir: SortDirection.DESC, visible: true, sorted: true, orderBy: 2, tableColumns:\r\n                new TableColumnConfig({ colName: \"dateReceived\", caption: 'Date received', Sortable: true, dataType: DataType.DATE_TIME })\r\n        },\r\n        {\r\n            sortDir: SortDirection.NONE, visible: true, sorted: false, orderBy: 3, tableColumns:\r\n                new TableColumnConfig({ colName: \"serverIP\", caption: 'ServerIP', Sortable: true })\r\n        }\r\n    ];\r\n\r\n    constructor(public sortSrv: SortService, private repo: Repository, private snackBar: MatSnackBar) {\r\n        this._serverFilter = '';\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._tableConfig = { tableColConfig: this._tableHeader, currentSortCol: 0, currentSortColName: \"serverID\" };\r\n        this._refreshIssueCount();\r\n        this._refreshData();\r\n    }\r\n    get tableHeader(): ITableColConfigState[] {\r\n        return this._tableConfig.tableColConfig;\r\n    }\r\n    get serverFilter(): string {\r\n        return this._serverFilter;\r\n    }\r\n    set serverFilter(fil: string) {\r\n        this._serverFilter = fil;\r\n    }\r\n\r\n    get issuesData(): CPRIssue[] {\r\n        return this._issuesDataFilter;\r\n    }\r\n\r\n    public getHeaderClass(): string {\r\n        if (!this.expanded) {\r\n            return \"fa fa-caret-down fa-vc\";\r\n        } else {\r\n            return \"fa fa-caret-up fa-vc\";\r\n        }\r\n    }\r\n    public deleteSelected() {\r\n        \r\n        this.deleteCount = 0;\r\n\r\n        let selIssues = this._issuesDataFilter.filter(sel => sel.recordSelected == true)\r\n            .map(val => val.issueID);\r\n\r\n        this.deleteCount = selIssues.length;\r\n        if (this.deleteCount > 0) {\r\n            this.timerSub.unsubscribe();\r\n\r\n            forkJoin(\r\n                selIssues.map(id => <Observable<any>>this.repo.deleteIssue(id))).pipe(\r\n                    map(val => val),\r\n                    tap(() => this._deleteComplete())\r\n                ).subscribe();\r\n        } else {\r\n            this._openSnackBar(\"Nothing to delete\");\r\n        }\r\n    }\r\n\r\n    public loadYellowBox(serverId: string, filePath: string, row: number) {\r\n        this._issuesDataFilter[row].expanded = !this._issuesDataFilter[row].expanded;\r\n        if (!this._issuesDataFilter[row].yellowBox) {\r\n            this.repo.getIssueYB(serverId, filePath).subscribe(val => {\r\n                if (this._issuesDataFilter[row]) {\r\n                    this._issuesDataFilter[row].yellowBox = val.yellowBox;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public sendContinue(serverId: string) {\r\n        this.repo.postServerCmd(serverId, 'continue')\r\n            .subscribe(result => {\r\n                console.log(result);\r\n                this._openSnackBar(`Continue sent to ${serverId}`);\r\n            })\r\n    }\r\n\r\n    private _deleteComplete() {\r\n        this._openSnackBar(`${this.deleteCount} issues deleted`);\r\n        this._refreshData();\r\n        this._refreshIssueCount();\r\n    }\r\n\r\n    public selectAll($event) {\r\n        this._issuesDataFilter.forEach(issue => {\r\n            issue.recordSelected = true;\r\n\r\n        });\r\n    }\r\n\r\n    public refreshIssues() {\r\n        this._refreshData();\r\n    }\r\n\r\n    private _refreshData() {\r\n        this.isRefreshing = true;\r\n        this.repo.getIssues().subscribe(data => {\r\n            this._issuesData = data;\r\n            this._issuesDataFilter = data;\r\n            this.serversWithIssues = this._issuesData.filter((obj, pos, arr) => {\r\n                return arr.map(mapObj => mapObj.serverID).indexOf(obj.serverID) === pos;\r\n            }).map(val => val.serverID).sort();\r\n\r\n            this.lastRefresh = Date.now();\r\n            this.isRefreshing = false;\r\n        });\r\n      }\r\n\r\n    public selectChange(event) {\r\n        this._applyFilter();\r\n    }\r\n\r\n    private _applyFilter() {\r\n        if (this.serverFilter) {\r\n            this._issuesDataFilter = this._issuesData.filter(x => x.serverID == this.serverFilter);\r\n        } else {\r\n            this._issuesDataFilter = this._issuesData;\r\n        }\r\n    }\r\n\r\n    private _refreshIssueCount() {\r\n        \r\n        this.timerSub = interval(30000)\r\n            .pipe(\r\n                startWith(0),\r\n                switchMap(() => this.repo.getIssueCount())\r\n            ).subscribe(response => \r\n            this.issueCount = response ? response.issueCount : 0\r\n        );\r\n    \r\n    }\r\n\r\n    private _openSnackBar(msg) {\r\n        let config = new MatSnackBarConfig();\r\n        config.duration = 500;\r\n        this.snackBar.open(msg, undefined, config);\r\n    }\r\n    \r\n    isColDateTime(index): boolean {\r\n        if (this.tableHeader[index].tableColumns.dataType === DataType.DATE_TIME) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get currentSortColName(): string {\r\n        return this._tableConfig.currentSortColName;\r\n    }\r\n\r\n    get tableCols(): TableColumnConfig[] {\r\n        return this.tableHeader\r\n            .filter(cols => cols.visible == true && cols.tableColumns.systemCol === false)\r\n            .sort(col => col.orderBy)\r\n            .map(colObj => colObj.tableColumns);\r\n    }\r\n\r\n    openIssueCard() {\r\n        this.issueOpen = !this.issueOpen;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.timerSub.unsubscribe();\r\n    }\r\n    \r\n    getSortClass(colIndex: number): string {\r\n        return TableColHepler.getSortClass(this.tableHeader, colIndex);\r\n    }\r\n\r\n    setSort(col: number) {\r\n        TableHelper.setSort(this._tableConfig, col);\r\n    }\r\n\r\n    get isAsc(): boolean {\r\n        return TableColHepler.isAsc(this.tableHeader[this._tableConfig.currentSortCol].sortDir);\r\n    }\r\n\r\n    get sortedColumn(): string {\r\n        return this.tableHeader[this._tableConfig.currentSortCol].tableColumns.sortCol;\r\n    }\r\n\r\n    \r\n    getKey(index: number, issue: CPRIssue) {\r\n        return issue.issueID;\r\n    }\r\n    \r\n}\r\n\r\ninterface IIssueYellowBox {\r\n    issueId: number;\r\n    yellowBox: string;\r\n}\r\ninterface IIssueState {\r\n    issueId: number;\r\n    selected: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n//import { Http, RequestMethod, Request, Response } from '@angular/http';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable, throwError, of} from 'rxjs';\r\n\r\nimport { AdvServer } from './models/AdvServer.model';\r\nimport { ServerCategory } from './models/ServerCategory.model';\r\nimport { DetailTypeCodes } from './models/DetailTypeCodes.model';\r\nimport { StatsDetailType } from './models/StatsDetailType.model';\r\nimport { AdvFileLinks } from './models/AdvFileLinks.model';\r\nimport { AdvEvents } from './models/AdvEvents.model';\r\nimport { AdvSubEvents } from './models/AdvSubEvents.model';\r\nimport { AdvCrossFoot } from './models/AdvCrossFoot.model';\r\nimport { CPRIssue, CPRIssueYellowBox } from './models/CPRIssue.model';\r\nimport { ServerListStartUp, serverCommand, ServerListUpdate } from './models/serverlist.model';\r\nimport { ServerConnect } from './models/serverconnect.model';\r\nimport { ServerListVersion } from './models/serverlistversion.model';\r\n\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nconst serversUrl = '/api/servers';\r\nconst serverListUrl = '/api/serverListStartup';\r\nconst serverListConnect = '/api/cpr/connect';\r\nconst serverListUpdate = '/api/serverListStartup/update';\r\n//const serverListStateUrl = '/api/serverListState';\r\n\r\nconst serverCategoryUrl = '/api/category';\r\nconst serverNameUrl = '/api/servers/name';\r\n\r\nconst detailTypeCodesUrl = '/api/statsDetail/getCodes';\r\nconst detailStatsUrl = '/api/statsDetail/getStats';\r\n\r\nconst eventsUrl = '/api/advEvents';\r\nconst eventsLatestUrl = '/api/advEvents/Latest';\r\nconst eventTypesUrl = '/api/advEvents/eventTypes';\r\n\r\nconst crossFootUrl = '/api/advCrossfoot';\r\nconst subEventsUrl = '/api/advSubEvents';\r\nconst fileLinkUrl = '/api/fileLink';\r\n\r\nconst cprIssuesUrl = '/api/cpr/issues';\r\nconst cprIssuesCountUrl = '/api/cpr/issues/count';\r\nconst cprIssuesYBUrl = '/api/cpr/issues/yellowBox';\r\n\r\nconst cprServerCmd = '/api/serverCmd';\r\n\r\nconst cprServerLstVersion = '/api/serverListVersion';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Repository {\r\n    \r\n    constructor(private http: HttpClient) {}\r\n    \r\n    getFileLinkPromise(): Observable<AdvFileLinks[]> {\r\n        const url = fileLinkUrl;\r\n        return this.http.get<AdvFileLinks[]>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getFileLinkPromise', []))\r\n            );\r\n    }\r\n\r\n    getServerList(): Observable<ServerListStartUp[]> {\r\n        const url = serverListUrl;\r\n        return this.http.get<ServerListStartUp[]>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getServerList', []))\r\n            );\r\n    }\r\n\r\n    getServerListVersion(): Observable<ServerListVersion[]> {\r\n        const url = cprServerLstVersion;\r\n        return this.http.get<ServerListVersion[]>(url)\r\n            .pipe(\r\n                catchError(this.handleError('getServerListVersion', []))\r\n            );\r\n    }\r\n\r\n    getServerListUpdate(): Observable<ServerListUpdate[]> {\r\n        const url = serverListUrl;\r\n        return this.http.get<ServerListUpdate[]>(url)\r\n            .pipe(\r\n                catchError(this.handleError('getServerListUpdate', []))\r\n            );\r\n    }\r\n\r\n    getServerListConn(serverId: string): Observable<ServerConnect[]> {\r\n        const url = serverListConnect + '/' + serverId;\r\n        return this.http.get<ServerConnect[]>(url)\r\n            .pipe(\r\n                catchError(this.handleError('getServerListConn', []))\r\n            );\r\n    }\r\n\r\n    getServersPromise() : Observable<any> {\r\n        const url = serversUrl;\r\n        return this.http.get<AdvServer[]>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getServersPromise', []))\r\n            );\r\n    }\r\n    getServerName(serverId: number): Observable<any> {\r\n        const url = serverNameUrl + '/' + serverId;\r\n        return this.http.get<string>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getServerName', []))\r\n            );\r\n    }\r\n\r\n    postServerCmd(serverName: string, command: string): Observable<any> {\r\n        const url = cprServerCmd;\r\n        \r\n        return this.http.post<serverCommand>(url, { serverId: serverName, command: command })\r\n            .pipe(\r\n            catchError(this.handleError('postServerCmd', []))\r\n            );\r\n    }\r\n\r\n    getIssues(): Observable<any> {\r\n        const url = cprIssuesUrl;\r\n        return this.http.get<CPRIssue>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getIssues', []))\r\n            );\r\n    }\r\n\r\n    getIssueYB(serverId: string, filePath: string): Observable<CPRIssueYellowBox> {\r\n        const url = `${cprIssuesYBUrl}/${serverId}/${filePath}`;\r\n        return this.http.get<CPRIssueYellowBox>(url)\r\n            .pipe(\r\n                catchError(this.handleError('getIssueYB'))\r\n            );\r\n    }\r\n\r\n    deleteIssue(id: number) {\r\n        const url = `${cprIssuesUrl}/${id}`;\r\n        return this.http.delete(url)\r\n            .pipe(\r\n            catchError(this.handleError('deleteIssue', []))\r\n            );\r\n    }\r\n\r\n    getIssueCount(): Observable<any> {\r\n       const url = cprIssuesCountUrl;\r\n        return this.http.get<any>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getIssueCount', []))\r\n            );\r\n    }\r\n\r\n    getEventsPromise(serverId: number, latest: boolean): Observable<any> {\r\n\r\n        if (latest) {\r\n            var url = eventsLatestUrl + '/' + serverId;\r\n        }\r\n        else {\r\n            var url = eventsUrl + '/' + serverId;\r\n        }\r\n        return this.http.get<AdvEvents[]>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getEventsPromise', []))\r\n            );\r\n    }\r\n\r\n    getSubEventsPromise(eventId: string): Observable<any> {\r\n        const url = subEventsUrl + '/' + eventId;\r\n        return this.http.get<AdvSubEvents[]>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getSubEventsPromise', []))\r\n            );\r\n    }\r\n\r\n    getCrossFootPromise(eventId: string): Observable<any> {\r\n        const url = crossFootUrl + '/' + eventId;\r\n        return this.http.get<AdvCrossFoot>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getCrossFootPromise', []))\r\n            );\r\n    }\r\n\r\n    getStatCodesPromise(): Observable<any> {\r\n        const url = detailTypeCodesUrl;\r\n        return this.http.get<DetailTypeCodes[]>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getStatCodesPromise', []))\r\n            );\r\n    }\r\n\r\n    getStatDetailsPromise(detailType: string): Observable<any> {\r\n        const url = detailStatsUrl + '/' + detailType;\r\n        return this.http.get<StatsDetailType[]>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getStatDetailsPromise', []))\r\n            );\r\n    }\r\n\r\n    getCategoriesPromise(): Observable<any> {\r\n        const url = serverCategoryUrl;\r\n        return this.http.get<ServerCategory[]>(url)\r\n            .pipe(\r\n            catchError(this.handleError('getCategoriesPromise', []))\r\n            );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n\r\n","module.exports = \"/*.tblConnect {\\r\\n    border-collapse: collapse;\\r\\n    border: none;\\r\\n    display: inline-block;\\r\\n    width: 100%;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.tblConnect td {\\r\\n    font-size: 75%;\\r\\n}\\r\\n\\r\\n\\r\\n.table-hover > tbody > tr.select-row:hover > td,\\r\\n.no-select > td {\\r\\n    background-color: white;\\r\\n}*/\\r\\n\\r\\n.field_set {\\r\\n    border-style: solid;\\r\\n    border-width: 1px;\\r\\n}\\r\\n\\r\\ninput[type=text] {\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmVybGlzdC9zZXJ2ZXItY29ubmVjdC9zZXJ2ZXItY29ubmVjdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFOztBQUVGO0lBQ0ksbUJBQW1CO0lBQ25CLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0FBQzNCIiwiZmlsZSI6InNyYy9hcHAvc2VydmVybGlzdC9zZXJ2ZXItY29ubmVjdC9zZXJ2ZXItY29ubmVjdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoudGJsQ29ubmVjdCB7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuLnRibENvbm5lY3QgdGQge1xyXG4gICAgZm9udC1zaXplOiA3NSU7XHJcbn1cclxuXHJcblxyXG4udGFibGUtaG92ZXIgPiB0Ym9keSA+IHRyLnNlbGVjdC1yb3c6aG92ZXIgPiB0ZCxcclxuLm5vLXNlbGVjdCA+IHRkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59Ki9cclxuXHJcbi5maWVsZF9zZXQge1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci13aWR0aDogMXB4O1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPXRleHRdIHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbn1cclxuIl19 */\"","import { Component, Input, OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ServerConnect } from '../models/serverconnect.model';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { Repository } from '../repository';\r\nimport { Subscriber, Subscription, pipe } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'server-connect',\r\n    templateUrl: 'server-connect.component.html',\r\n    styleUrls: ['server-connect.component.css']\r\n})\r\nexport class ServerConnectComponent implements OnInit {\r\n    @Input()\r\n    serverId: string;\r\n\r\n    serverListConn: ServerConnect[] = [];\r\n    isLoading: boolean = false;\r\n\r\n    sub: Subscription = new Subscription();\r\n\r\n    constructor(public snackBar: MatSnackBar, private repo: Repository) { }\r\n\r\n    ngOnInit() {\r\n        this.sub = this.repo.getServerListConn(this.serverId).subscribe(conn => {\r\n            this.serverListConn = conn;\r\n        });\r\n    }\r\n\r\n    //ngOnChanges(changes: SimpleChanges) {\r\n    //    for (let property in changes) {\r\n    //        if (property === 'serverId') {\r\n    //            if (changes[property].previousValue !== changes[property].currentValue) {\r\n    //                this.refreshData();\r\n    //            }\r\n    //        }\r\n    //    }\r\n    //}\r\n\r\n    //refreshData() {\r\n    //    this.isLoading = true;\r\n    //    this.sub = this.repo.getServerListConn(this.serverId).subscribe(conn => {\r\n    //        this.serverListConn = conn;\r\n    //        this.isLoading = false;\r\n    //    });\r\n    //}\r\n    //ngOnDestroy() {\r\n    //    this.sub.unsubscribe();\r\n    //}\r\n    \r\n    copyToClipboard(item) {\r\n        item.select();\r\n        document.execCommand('copy');\r\n        item.setSelectionRange(0, 0);\r\n        this.openSnackBar('Copied');\r\n    }\r\n\r\n    openSnackBar(msg) {\r\n        let config = new MatSnackBarConfig();\r\n        config.duration = 500;\r\n        this.snackBar.open(msg, undefined, config);\r\n    }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ServerConnect } from '../models/serverconnect.model';\r\n\r\n@Component({\r\n    selector: 'server-connect-dialog',\r\n    templateUrl: 'server-connect.dialog.component.html'\r\n})\r\nexport class ServerConnectDialog {\r\n    serverId: string;\r\n\r\n    constructor(public dialogRef: MatDialogRef<ServerConnectDialog>, @Inject(MAT_DIALOG_DATA) data) {\r\n        this.serverId = data.serverId;\r\n    }\r\n\r\n    onClick() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZlcmxpc3Qvc2VydmVyLWZpbHRlci12ZXJzaW9uL3NlcnZlci1maWx0ZXItdmVyc2lvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { versionInfo } from '../helper/versioninfo';\r\nimport { SortService } from '../services/sort.service';\r\nimport { MatSelect } from '@angular/material/select';\r\n\r\n@Component({\r\n    selector: 'server-filter-version',\r\n    templateUrl: 'server-filter-version.component.html',\r\n    styleUrls: ['server-filter-version.component.css']\r\n})\r\nexport class ServerFilterVersion implements OnInit {\r\n\r\n    @Input()\r\n    versionInfo: versionInfo[] = [];\r\n\r\n    @Input()\r\n    labelInfo: string;\r\n\r\n    @Output()\r\n    versionSel: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    selected: string = '';\r\n\r\n    constructor(public sortSrv: SortService) { }\r\n    ngOnInit() {\r\n        \r\n    }\r\n\r\n    onChangeVersion() {\r\n        this.versionSel.emit(this.selected);\r\n    }\r\n\r\n    resetFilter() {\r\n        this.selected = '';\r\n        this.onChangeVersion();\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZlcmxpc3Qvc2VydmVyLWZpbHRlci9zZXJ2ZXItZmlsdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Repository } from '../repository';\r\nimport { ServerCategory } from '../models/ServerCategory.model';\r\nimport { ServerListSrv } from '../services/serverlist.service';\r\n\r\n@Component({\r\n    selector: 'server-filter',\r\n    templateUrl: './server-filter.component.html',\r\n    styleUrls: ['./server-filter.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ServerFilterComponent implements OnInit {\r\n    @Output()\r\n    catChange: EventEmitter<number> = new EventEmitter<number>();\r\n  \r\n    currentCategory = 0;\r\n    serverCats: ServerCategory[] = [];\r\n\r\n    constructor(private repo: Repository, private cd: ChangeDetectorRef, public serverLstSrv: ServerListSrv) {}\r\n\r\n    ngOnInit(): void {\r\n        this.refreshData();\r\n    }\r\n\r\n    refreshData() {\r\n        this.repo.getCategoriesPromise().subscribe(res => {\r\n            this.serverCats = res;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    get categories(): ServerCategory[] {\r\n        return this.serverCats;\r\n    }\r\n\r\n    changeCategory(categoryId: number)\r\n    {\r\n        this.currentCategory = categoryId;\r\n        this.catChange.emit(this.currentCategory);\r\n    }\r\n}\r\n","module.exports = \"input[type=search]::-webkit-search-cancel-button {\\r\\n    -webkit-appearance: searchfield-cancel-button;\\r\\n}\\r\\n\\r\\n#searchBox {\\r\\n    padding: 2px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmVybGlzdC9zZXJ2ZXItdG9wLW5hdmlnYXRvci9zZXJ2ZXItbmF2aWdhdG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw2Q0FBNkM7QUFDakQ7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvc2VydmVybGlzdC9zZXJ2ZXItdG9wLW5hdmlnYXRvci9zZXJ2ZXItbmF2aWdhdG9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBzZWFyY2hmaWVsZC1jYW5jZWwtYnV0dG9uO1xyXG59XHJcblxyXG4jc2VhcmNoQm94IHtcclxuICAgIHBhZGRpbmc6IDJweDtcclxufSJdfQ== */\"","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, debounce } from 'rxjs/operators';\r\nimport { ServerListSrv } from '../services/serverlist.service';\r\n\r\n@Component({\r\n    selector: 'server-navigator',\r\n    templateUrl: 'server-navigator.component.html',\r\n    styleUrls: ['server-navigator.component.css']\r\n})\r\nexport class ServerNavigatorComponent {\r\n    @Output()\r\n    searchString: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input()\r\n    notIn: boolean = false;\r\n\r\n    private searchChanged = new Subject();\r\n\r\n    constructor(private serverLstSrv: ServerListSrv) {\r\n        this.searchChanged.pipe(\r\n            debounceTime(200),\r\n            distinctUntilChanged()\r\n        ).subscribe(e => this.searchString.emit(e));\r\n    }\r\n\r\n    //changeSearchString(search: string) {\r\n    //    this.searchString.pipe(debouceTime(200)).emit(search);\r\n    //}\r\n\r\n    onSearchType(value: string) {\r\n        this.searchChanged.next(value);\r\n        if (this.notIn) {\r\n            this.serverLstSrv.filterNotByString(value);\r\n        } else {\r\n            this.serverLstSrv.filterByString(value);\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\\r\\n.scroll-to-top {\\r\\n    position: fixed;\\r\\n    bottom: 15px;\\r\\n    right: 15px;\\r\\n    opacity: 0;\\r\\n    transition: all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n.show-scroll {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n#scrollButton {\\r\\n    background: black;\\r\\n    color:white;\\r\\n    padding:20px;\\r\\n    border:none;\\r\\n    cursor:pointer;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmVybGlzdC9zZXJ2ZXJkYXNoYm9hcmQvc2VydmVyZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixXQUFXO0lBQ1gsVUFBVTtJQUNWLCtCQUErQjtBQUNuQzs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsWUFBWTtJQUNaLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvc2VydmVybGlzdC9zZXJ2ZXJkYXNoYm9hcmQvc2VydmVyZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLnNjcm9sbC10by10b3Age1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgYm90dG9tOiAxNXB4O1xyXG4gICAgcmlnaHQ6IDE1cHg7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuLnNob3ctc2Nyb2xsIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbiNzY3JvbGxCdXR0b24ge1xyXG4gICAgYmFja2dyb3VuZDogYmxhY2s7XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxuICAgIHBhZGRpbmc6MjBweDtcclxuICAgIGJvcmRlcjpub25lO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuIl19 */\"","import { Component, HostListener } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'serverdashboard',\r\n    templateUrl: 'serverdashboard.component.html',\r\n    styleUrls: ['serverdashboard.component.css']\r\n})\r\nexport class ServerDashBoardComponent {\r\n    showScroll: boolean;\r\n    showScrollHeight = 300;\r\n    hideScrollHeight = 10;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    @HostListener('window:scroll', [])\r\n    onWindowScroll() {\r\n        if ((window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop) > this.showScrollHeight) {\r\n            this.showScroll = true;\r\n        } else if (this.showScroll && (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop) < this.hideScrollHeight) {\r\n            this.showScroll = false;\r\n        }\r\n    }\r\n\r\n    scrollToTop() {\r\n        (function smoothscroll() {\r\n            var currentScroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n            if (currentScroll > 0) {\r\n                window.requestAnimationFrame(smoothscroll);\r\n                window.scrollTo(0, currentScroll - (currentScroll / 5));\r\n            }\r\n        })();\r\n    }\r\n}\r\n","module.exports = \"#serverTable {\\r\\n    table-layout: auto;\\r\\n    float: left;\\r\\n    overflow-y: auto;\\r\\n    overflow-x: auto;\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    border-collapse: collapse;\\r\\n    \\r\\n}\\r\\n\\r\\n.fa-vc {\\r\\n    line-height: inherit !important;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.cardIcon {\\r\\n    vertical-align: bottom;\\r\\n}\\r\\n\\r\\n#serverTableCard {\\r\\n    width: auto;\\r\\n}\\r\\n\\r\\n/*table thead tr {\\r\\n    text-decoration:underline;\\r\\n    cursor: pointer;\\r\\n    background-color: lightslategrey;\\r\\n}*/\\r\\n\\r\\n#configCols {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.plusMinus {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#serverTable thead tr {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nth.unsortable {\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n#serverTable tr:hover {\\r\\n    background-color: #ffff99;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n#serverTable tr.active {\\r\\n    border-left: 2px solid #007aeb;\\r\\n    border-right: 2px solid #007aeb;\\r\\n}\\r\\n\\r\\n#serverTable tr.active td {\\r\\n    /*background-color: #007bff !important;*/\\r\\n    background-color: #007aeb;\\r\\n    color: #fff;\\r\\n    border-top: 2px solid #007aeb;\\r\\n    border-bottom: 2px solid #007aeb;\\r\\n    \\r\\n}\\r\\n\\r\\n.table-hover > tbody > tr.select-row:hover > td,\\r\\n.clsSubServerList > td {\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n.pointer {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#labelInfo {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n/*#refreshCheck {\\r\\n    align-content:center;\\r\\n    padding: 20px;\\r\\n}*/\\r\\n\\r\\n#supportissues {\\r\\n    color: red;\\r\\n    align-content: center;\\r\\n}\\r\\n\\r\\n/*#yellowBoxes {\\r\\n    color: red;\\r\\n    font-weight: 800;\\r\\n}*/\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmVybGlzdC9zZXJ2ZXJsaXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFdBQVc7SUFDWCx5QkFBeUI7O0FBRTdCOztBQUVBO0lBQ0ksK0JBQStCO0lBQy9CLGVBQWU7QUFDbkI7O0FBQ0E7SUFDSSxzQkFBc0I7QUFDMUI7O0FBR0E7SUFDSSxXQUFXO0FBQ2Y7O0FBQ0E7Ozs7RUFJRTs7QUFDRjtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUNBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLDhCQUE4QjtJQUM5QiwrQkFBK0I7QUFDbkM7O0FBQ0E7SUFDSSx3Q0FBd0M7SUFDeEMseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCw2QkFBNkI7SUFDN0IsZ0NBQWdDOztBQUVwQzs7QUFFQTs7SUFFSSx1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBOzs7RUFHRTs7QUFFRjtJQUNJLFVBQVU7SUFDVixxQkFBcUI7QUFDekI7O0FBRUE7OztFQUdFIiwiZmlsZSI6InNyYy9hcHAvc2VydmVybGlzdC9zZXJ2ZXJsaXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjc2VydmVyVGFibGUge1xyXG4gICAgdGFibGUtbGF5b3V0OiBhdXRvO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gICAgb3ZlcmZsb3cteDogYXV0bztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgXHJcbn1cclxuXHJcbi5mYS12YyB7XHJcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdCAhaW1wb3J0YW50O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5jYXJkSWNvbiB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG59XHJcblxyXG5cclxuI3NlcnZlclRhYmxlQ2FyZCB7XHJcbiAgICB3aWR0aDogYXV0bztcclxufVxyXG4vKnRhYmxlIHRoZWFkIHRyIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodHNsYXRlZ3JleTtcclxufSovXHJcbiNjb25maWdDb2xzIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLnBsdXNNaW51cyB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuI3NlcnZlclRhYmxlIHRoZWFkIHRyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxudGgudW5zb3J0YWJsZSB7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbn1cclxuXHJcbiNzZXJ2ZXJUYWJsZSB0cjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZjk5O1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4jc2VydmVyVGFibGUgdHIuYWN0aXZlIHtcclxuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzAwN2FlYjtcclxuICAgIGJvcmRlci1yaWdodDogMnB4IHNvbGlkICMwMDdhZWI7XHJcbn1cclxuI3NlcnZlclRhYmxlIHRyLmFjdGl2ZSB0ZCB7XHJcbiAgICAvKmJhY2tncm91bmQtY29sb3I6ICMwMDdiZmYgIWltcG9ydGFudDsqL1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2FlYjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICMwMDdhZWI7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzAwN2FlYjtcclxuICAgIFxyXG59XHJcblxyXG4udGFibGUtaG92ZXIgPiB0Ym9keSA+IHRyLnNlbGVjdC1yb3c6aG92ZXIgPiB0ZCxcclxuLmNsc1N1YlNlcnZlckxpc3QgPiB0ZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLnBvaW50ZXIge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4jbGFiZWxJbmZvIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4vKiNyZWZyZXNoQ2hlY2sge1xyXG4gICAgYWxpZ24tY29udGVudDpjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59Ki9cclxuXHJcbiNzdXBwb3J0aXNzdWVzIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi8qI3llbGxvd0JveGVzIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXdlaWdodDogODAwO1xyXG59Ki9cclxuIl19 */\"","import { Component, OnInit, ViewChildren, QueryList, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { Repository } from './repository';\r\nimport { Router } from '@angular/router';\r\nimport { ServerListStartUp } from './models/serverlist.model';\r\nimport { FilterService } from './services/filter.service';\r\nimport { SortService } from './services/sort.service';\r\nimport { ITableColConfigState, TableColHepler, TableColumnConfig, TableHelper, ITableConfigState } from './table/table-column-config';\r\nimport { ServerFilterVersion } from './server-filter-version/server-filter-version.component';\r\nimport { ServerListConfigDialog } from './dialogs/slconfigdialog.component';\r\nimport { ConfirmedDialog } from './dialogs/confirm/confirmdialog.component';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { ServerListState, ServerListPersist, ServerColumnState } from './serverlist.state';\r\nimport { Subscription, timer ,  interval } from 'rxjs';\r\nimport { ServerConnectDialog } from './server-connect/server-connect.dialog.component';\r\nimport { ServerListSrv } from './services/serverlist.service';\r\n\r\n@Component({\r\n    selector: 'serverlist',\r\n    templateUrl: 'serverlist.component.html',\r\n    styleUrls: ['serverlist.component.css'],\r\n    providers: [FilterService]\r\n})\r\nexport class ServerListComponent implements OnInit, OnDestroy {\r\n    private _serverTableConfig: ITableConfigState;\r\n    public expanded: boolean = false;\r\n\r\n    @ViewChildren(ServerFilterVersion) versionFilters: QueryList<ServerFilterVersion>\r\n\r\n    serverListPersist: ServerListPersist[] = [];\r\n\r\n    isLoading: boolean = false;\r\n    \r\n    filterYellowBox: boolean = false;\r\n    connectCardOpen: boolean = false;\r\n\r\n    selectedRow: number = 0;\r\n    selectedServer: string;\r\n    \r\n    serversFiltered: ServerListStartUp[];\r\n\r\n    pollingTimer: Subscription = new Subscription();\r\n\r\n    private _lastRefreshSub: Subscription = new Subscription();\r\n    private _lastRefresh: Number;\r\n\r\n    refreshOn: boolean = true;\r\n    constructor(private repo: Repository, private router: Router, private filterSrv: FilterService,\r\n        public sortSrv: SortService, private confirmDialog: MatDialog, public serverLstState: ServerListState,\r\n        private configDialog: MatDialog, private connectDialog: MatDialog, public serverLstSrv: ServerListSrv,\r\n        private ref: ChangeDetectorRef) {\r\n       \r\n    }\r\n\r\n    ngOnInit() {\r\n        this._serverTableConfig = { tableColConfig: ServerColumnState.getColumns(), currentSortCol: 0, currentSortColName: \"serverID\" };\r\n        //this._loadState();\r\n        \r\n        this._lastRefreshSub = this.serverLstSrv.lastRefresh.subscribe(result => {\r\n            this._lastRefresh = result;\r\n            this.ref.markForCheck();\r\n        });\r\n        this.serverLstSrv.loadData();\r\n        this.serverLstSrv.serverList.subscribe(result => {\r\n            this.serversFiltered = result;\r\n            this.ref.markForCheck();\r\n        });\r\n        this.pollingTimer = interval(30000).subscribe(() => this._refreshData());\r\n    }\r\n\r\n    //set currentSortCol(index: number) {\r\n    //    this._serverTableConfig.currentSortCol = index;\r\n    //}\r\n\r\n    get currentSortCol() {\r\n        return this._serverTableConfig.currentSortCol;\r\n    }\r\n    get serverList(): ServerListStartUp[] {\r\n        return this.serversFiltered;\r\n    }\r\n\r\n    get currentSortColName(): string {\r\n        return this._serverTableConfig.currentSortColName;\r\n    }\r\n    get serverListColumns(): ITableColConfigState[] {\r\n        return this._serverTableConfig.tableColConfig;\r\n    }\r\n\r\n    get isFiltered(): boolean {\r\n        return this.serverLstSrv.isFiltered;\r\n    }\r\n\r\n    public getHeaderClass(): string {\r\n        if (!this.expanded) {\r\n            return \"fa fa-caret-down fa-vc\";\r\n        } else {\r\n            return \"fa fa-caret-up fa-vc\";\r\n        }\r\n    }\r\n\r\n    get cardTitle(): string {\r\n        if (this.serverLstSrv.isFiltered) {\r\n            return `Server List (${this.serversFiltered.length}) *Filtered`;\r\n        } else {\r\n            return `Server List (${this.serversFiltered.length})`;\r\n        }\r\n    }\r\n\r\n    get isAsc(): boolean {\r\n        return TableColHepler.isAsc(this.serverListColumns[this.currentSortCol].sortDir);\r\n    }\r\n    //get sortedColumn(): string {\r\n    //    return this.serverListColumns[this.currentSortCol].tableColumns.sortCol;\r\n    //}\r\n    get serverCols(): TableColumnConfig[] {\r\n        return this.serverListColumns.filter(cols => cols.visible == true).map(colObj => colObj.tableColumns);\r\n    }\r\n\r\n    get serversWithIssues() {\r\n        return this.serverLstSrv.serversWithIssues;\r\n    }\r\n\r\n    get lastRefresh(): Number {\r\n        return this._lastRefresh;\r\n    }\r\n\r\n    get issuesClass(): string {\r\n        if (this.serverLstSrv.serversWithIssues > 0) {\r\n            return 'bg-danger text-white';\r\n        } else {\r\n            return 'bg-info text-black';\r\n        }\r\n    }\r\n\r\n    public openConnect() {\r\n        this.connectCardOpen = !this.connectCardOpen;\r\n        const config = new MatDialogConfig();\r\n        config.data = { serverId: this.selectedServer };\r\n\r\n        this.pollingTimer.unsubscribe();\r\n\r\n        const dialogRef = this.configDialog.open(ServerConnectDialog, config);\r\n        \r\n\r\n        dialogRef.afterClosed().subscribe(close => {\r\n            this._refreshData();\r\n            this.ref.detectChanges();\r\n            console.log('Connection dialog closed');\r\n        })\r\n    }\r\n\r\n    openConfigDialog() {\r\n        this.pollingTimer.unsubscribe();\r\n        const dialogRef = this.configDialog.open(ServerListConfigDialog, { data: this.serverListColumns }\r\n        );\r\n\r\n        dialogRef.afterClosed().subscribe(close => {\r\n            \r\n            ServerColumnState.saveColumns(this.serverListColumns);\r\n            this._refreshData();\r\n        })\r\n    }\r\n\r\n    //private _loadState() {\r\n    //    this.currentSortColName = this.serverLstState.currentSortColName;\r\n    //    //this.serverFilter = this.serverLstState.serverFilter;\r\n    //    //this.serverNotFilter = this.serverLstState.serverNotFilter;\r\n    //}\r\n\r\n    //private _saveState() {\r\n    //    this.serverLstState.currentSortColName = this.currentSortColName;\r\n    //    //this.serverLstState.serverFilter = this.serverFilter;\r\n    //    //this.serverLstState.serverNotFilter = this.serverNotFilter;\r\n    //}\r\n\r\n    ngOnDestroy() {\r\n        this.pollingTimer.unsubscribe();\r\n        this._lastRefreshSub.unsubscribe();\r\n    }\r\n    \r\n    private _refreshData() {\r\n        this.serverLstSrv.refreshData();\r\n        this.ref.markForCheck();\r\n    }\r\n\r\n    //public sortTable(col: string) {\r\n    //    this.serverListColumns.forEach(s => s.sortDir = SortDirection.NONE);\r\n\r\n    //    var colSel = this.serverListColumns[this.serverListColumns.findIndex(c => c.tableColumns.colName === col)];\r\n    //    colSel.sortDir = SortDirection.ASC;\r\n    //    colSel.sorted = true;\r\n\r\n    //}\r\n\r\n    public setSort(col: number) {\r\n        TableHelper.setSort(this._serverTableConfig, col);\r\n    }\r\n\r\n    public isColVisible(colName: string): boolean {\r\n        return this.serverListColumns.find(name => name.tableColumns.colName == colName).visible;\r\n    }\r\n\r\n    public setClickedRow(i, serverId) {\r\n        this.selectedRow = i;\r\n        this.selectedServer = serverId;\r\n    }\r\n\r\n    public getSortClass(colIndex: number): string {\r\n        return TableColHepler.getSortClass(this._serverTableConfig.tableColConfig, colIndex);\r\n        \r\n    }\r\n    \r\n    public filterByYellowBox() {\r\n        if (this.filterYellowBox === true) {\r\n            this.serverLstSrv.filterByYellowBox(true);\r\n        }\r\n        else {\r\n            this.serverLstSrv.filterByYellowBox(null);\r\n        }\r\n    }\r\n\r\n    public timeBGClass(time: number): string {\r\n        if (time > 60) {\r\n            return \"bg-danger text-white\";\r\n        } else if (time > 30) {\r\n            return 'bg-warning text-white';\r\n        } else {\r\n            return 'bg-success text-white';\r\n        } \r\n    }\r\n\r\n    public postServerCmd(serverId: string, cmd: string) {\r\n\r\n        const dialogRef = this.confirmDialog.open(ConfirmedDialog, {\r\n            data: { title: 'Server command', question: `Do you wish to send a ${cmd} to ${serverId}?`, confirmed: false }\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log(result);\r\n            if (result) {\r\n                console.log(\"Command sent\");\r\n                this.repo.postServerCmd(serverId, cmd)\r\n                    .subscribe(result => console.log(result));\r\n            } else {\r\n                console.log(\"Command not sent\");\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    public trackByFnc(index, item) {\r\n        if (!item) return null;\r\n        return item.serverID;\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ServerListConfigDialog } from './dialogs/slconfigdialog.component';\r\nimport { ServerConnectDialog } from './server-connect/server-connect.dialog.component';\r\nimport { ServerConnectComponent} from './server-connect/server-connect.component';\r\nimport { WebTableComponent } from './table/table.component';\r\nimport { IssuesComponent } from './issues/issues.component';\r\nimport { ServerFilterComponent } from './server-filter/server-filter.component';\r\nimport { ServerFilterVersion } from './server-filter-version/server-filter-version.component';\r\nimport { ServerNavigatorComponent } from './server-top-navigator/server-navigator.component';\r\nimport { ServerDashBoardComponent } from './serverdashboard/serverdashboard.component';\r\nimport { ServerVersionsComponent } from './serverversions/serverversions.component';\r\nimport { ConfirmedDialog } from './dialogs/confirm/confirmdialog.component';\r\n\r\nimport { SortService } from './services/sort.service';\r\nimport { ServerListSrv } from './services/serverlist.service';\r\nimport { FilterService } from './services/filter.service';\r\nimport { JsFuncService } from './services/jsfunc.service';\r\nimport { Repository } from './repository';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    ServerListConfigDialog,\r\n    ServerConnectDialog,\r\n    ServerConnectComponent,\r\n    WebTableComponent,\r\n    IssuesComponent,\r\n    ServerFilterComponent,\r\n    ServerFilterVersion,\r\n    ServerNavigatorComponent,\r\n    ServerDashBoardComponent,\r\n    ServerVersionsComponent,\r\n    ConfirmedDialog\r\n  ],\r\n  providers: [\r\n    SortService,\r\n    ServerListSrv,\r\n    FilterService,\r\n    JsFuncService,\r\n    Repository\r\n  ]\r\n})\r\nexport class ServerlistModule { }\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { SortDirection, ITableColConfigState, TableColumnConfig } from './table/table-column-config';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ServerListState implements OnInit {\r\n    currState: IServerListState = INITIAL_STATE;\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    get currentSortColName() {\r\n        return this.currState.currentSortColName;\r\n    }\r\n\r\n    set currentSortColName(name: string) {\r\n        this.currState.currentSortColName = name;\r\n    }\r\n\r\n    get serverNotFilter() {\r\n        return this.currState.serverNotFilter;\r\n    }\r\n\r\n    set serverNotFilter(filterNot) {\r\n        this.currState.serverNotFilter = filterNot;\r\n    }\r\n\r\n    get serverFilter() {\r\n        return this.currState.serverFilter;\r\n    }\r\n\r\n    set serverFilter(filterSrv) {\r\n        this.currState.serverFilter = filterSrv;\r\n    }\r\n}\r\n\r\nexport interface IServerListState {\r\n    currentSortColName: string;\r\n    serverFilter: any;\r\n    serverNotFilter: any;\r\n}\r\n\r\nexport const INITIAL_STATE: IServerListState = {\r\n    currentSortColName: \"serverID\",\r\n    serverFilter: { serverID: '', catID: '', cprV: '', advantageServerV: '', paServV: '', yellowBox: '' },\r\n    serverNotFilter: { serverID: '' }, \r\n}\r\n\r\nexport class ServerListPersist {\r\n    constructor(\r\n        public serverId: string,\r\n        public expanded: boolean\r\n    ) {  }\r\n}\r\n\r\nexport const ServerListColsDefault: ITableColConfigState[] = [\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: true, orderBy: 0, tableColumns:\r\n            new TableColumnConfig({ colName: \"serverID\", caption: 'ServerID', Sortable: true, nonConfigurable: true })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: true, sorted: false, orderBy: 1, tableColumns:\r\n            new TableColumnConfig({ colName: \"cpr\", caption: 'cpr', Sortable: true, nonConfigurable: true })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: true, sorted: false, orderBy: 2, tableColumns:\r\n            new TableColumnConfig({ colName: \"srv\", caption: 'srv', Sortable: true, nonConfigurable: true })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: true, sorted: false, orderBy: 3, tableColumns:\r\n            new TableColumnConfig({ colName: \"png\", caption: 'png', Sortable: true, nonConfigurable: true })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 4, tableColumns:\r\n            new TableColumnConfig({ colName: \"serverIP\", caption: 'ServerIP', Sortable: true })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 5, tableColumns:\r\n            new TableColumnConfig({ colName: \"cprV\", caption: 'CprV', Sortable: true, sortCol: 'ncprV' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 6, tableColumns:\r\n            new TableColumnConfig({ colName: \"advantageServerV\", caption: 'AdvServerV', Sortable: true, sortCol: 'nAdvServerV' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 7, tableColumns:\r\n            new TableColumnConfig({ colName: \"paServV\", caption: 'PaServV', Sortable: true, sortCol: 'nPaServV' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 8, tableColumns:\r\n            new TableColumnConfig({ colName: \"vAdvEIS\", caption: 'AdvEISv', Sortable: true, sortCol: 'nvAdvEIS' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 9, tableColumns:\r\n            new TableColumnConfig({ colName: \"vAWSServ\", caption: 'AWSServV', Sortable: true, sortCol: 'nvAWSServ' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 10, tableColumns:\r\n            new TableColumnConfig({ colName: \"vAdvOE\", caption: 'AdvOEv', Sortable: true, sortCol: 'nvAdvOE' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 11, tableColumns:\r\n            new TableColumnConfig({ colName: \"vAdvEIS_l\", caption: 'AdvEIS_lv', Sortable: true, sortCol: 'nvAdvEIS_l' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 12, tableColumns:\r\n            new TableColumnConfig({ colName: \"vGetData\", caption: 'GetDataV', Sortable: true, sortCol: 'nvGetData' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 13, tableColumns:\r\n            new TableColumnConfig({ colName: \"vPockAdv\", caption: 'PockAdvV', Sortable: true, sortCol: 'nvPockAdv' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 14, tableColumns:\r\n            new TableColumnConfig({ colName: \"vOrdApprov\", caption: 'OrdApprovV', Sortable: true, sortCol: 'nvOrdApprov' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 15, tableColumns:\r\n            new TableColumnConfig({ colName: \"vPauSetup\", caption: 'PauSetupV', Sortable: true, sortCol: 'nvPauSetup' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 16, tableColumns:\r\n            new TableColumnConfig({ colName: \"vSecAdmin\", caption: 'SecAdminV', Sortable: true, sortCol: 'nvSecAdmin' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 17, tableColumns:\r\n            new TableColumnConfig({ colName: \"advServV\", caption: 'AdvServV', Sortable: true, sortCol: 'nadvServV' })\r\n    },\r\n    {\r\n        sortDir: SortDirection.NONE, visible: false, sorted: false, orderBy: 18, tableColumns:\r\n            new TableColumnConfig({ colName: \"daysReboot\", caption: 'Rebooted', Sortable: true }),\r\n    }\r\n];\r\n\r\nexport class ServerColumnState {\r\n    public static saveColumns(cols: ITableColConfigState[]) {\r\n        localStorage.setItem(\"ServerListColState\", JSON.stringify(cols));\r\n    }\r\n\r\n    public static getColumns(): ITableColConfigState[] {\r\n        return ServerListColsDefault;\r\n        //localStorage.setItem(\"ServerListColState\", \"\");\r\n        //let cols = localStorage.getItem(\"ServerListColState\");\r\n\r\n        //if (cols) {\r\n        //    if (cols.length == ServerListColsDefault.length) {\r\n        //        return JSON.parse(cols);\r\n        //    } else {\r\n        //        return ServerListColsDefault;\r\n        //    }\r\n            \r\n        //} else {\r\n        //    return ServerListColsDefault;\r\n        //}\r\n    }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n.fa-vc {\\r\\n    line-height: inherit !important;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.filterRow tr:hover {\\r\\n    background-color: cornflowerblue !important;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmVybGlzdC9zZXJ2ZXJ2ZXJzaW9ucy9zZXJ2ZXJ2ZXJzaW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7SUFDSSwrQkFBK0I7SUFDL0IsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLDJDQUEyQztBQUMvQyIsImZpbGUiOiJzcmMvYXBwL3NlcnZlcmxpc3Qvc2VydmVydmVyc2lvbnMvc2VydmVydmVyc2lvbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuLmZhLXZjIHtcclxuICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5jYXJkLWhlYWRlciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmZpbHRlclJvdyB0cjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb3JuZmxvd2VyYmx1ZSAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Repository } from '../repository';\r\nimport { ServerListVersion } from '../models/serverlistversion.model';\r\nimport {\r\n    ITableColConfigState, SortDirection,\r\n    TableColumnConfig, TableColHepler, DataType, FilterType, ITableConfigState, TableHelper\r\n} from '../table/table-column-config';\r\nimport { SortService } from '../services/sort.service';\r\nimport { JsFuncService } from '../services/jsfunc.service';\r\nimport { FilterService } from '../services/filter.service';\r\nimport { ServerListSrv } from '../services/serverlist.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'serverversions',\r\n    templateUrl: 'serverversions.component.html',\r\n    styleUrls: ['serverversions.component.css']\r\n})\r\nexport class ServerVersionsComponent implements OnInit {\r\n    public expanded: boolean = false;\r\n    public isLoading: boolean = false;\r\n\r\n    private _serverVersions: ServerListVersion[] = [];\r\n    private _serverVersionsFiltered: ServerListVersion[] = [];\r\n    private _serverFilter: any = {};\r\n    private _serverFilterId: string;\r\n\r\n    public selectedRow: number = 0;\r\n    \r\n    private _tableConfig: ITableConfigState;\r\n    private subFilter: Subscription = new Subscription();\r\n\r\n    constructor(private repo: Repository, public sortSrv: SortService, private jsFunc: JsFuncService,\r\n                private filterSrv: FilterService, private serverLstSrv: ServerListSrv) {\r\n\r\n    } \r\n\r\n    ngOnDestroy() {\r\n        this.subFilter.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this._tableConfig = { tableColConfig: serverVCols, currentSortCol: 0, currentSortColName: \"serverid\" };\r\n        this._tableConfig.tableColConfig.forEach(header => {\r\n            this._serverFilter[header.tableColumns.colName] = '';\r\n            \r\n        });\r\n        this._serverFilterId = '';\r\n        this.refreshData();\r\n        this.subFilter = this.serverLstSrv.serverFilter.subscribe(result => {\r\n            this._serverFilterId = result['serverID'];\r\n            this._applyFilter();\r\n        });\r\n    }\r\n    get tableHeader() : ITableColConfigState[] {\r\n        return this._tableConfig.tableColConfig;\r\n    }\r\n    \r\n    get currentSortColName(): string {\r\n        return this._tableConfig.currentSortColName;\r\n    }\r\n    get tableCols(): TableColumnConfig[] {\r\n        return this.tableHeader.filter(cols => cols.visible == true).map(colObj => colObj.tableColumns);\r\n    }\r\n    get isAsc(): boolean {\r\n        return TableColHepler.isAsc(this.tableHeader[this._tableConfig.currentSortCol].sortDir);\r\n    }\r\n    get cardTitle(): string {\r\n        if (this.serverLstSrv.isFiltered) {\r\n            return `Versions (${this._serverVersionsFiltered.length}) *Filtered`;\r\n        } else {\r\n            return `Versions List (${this._serverVersionsFiltered.length})`;\r\n        }\r\n    }\r\n    get serverVersions(): ServerListVersion[] {\r\n        return this._serverVersionsFiltered;\r\n    }\r\n    public clearFilter() {\r\n        this._tableConfig.tableColConfig.forEach(header => {\r\n            this._serverFilter[header.tableColumns.colName] = '';\r\n            header.tableColumns.filterValue = '';\r\n        });\r\n        this._serverVersionsFiltered = this._serverVersions;\r\n    }\r\n    public refreshData() {\r\n        this.isLoading = true;\r\n        this.repo.getServerListVersion().subscribe(versions => {\r\n            this._serverVersions = versions;\r\n            this._serverVersionsFiltered = this._serverVersions;\r\n            this._refreshFilterValues();\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n\r\n    public setRow(row: number) {\r\n        this.selectedRow = row;\r\n    }\r\n\r\n    public getHeaderClass() {\r\n        if (!this.expanded) {\r\n            return \"fa fa-caret-down fa-vc\";\r\n        } else {\r\n            return \"fa fa-caret-up fa-vc\";\r\n        }\r\n    }\r\n    public setSort(col: number) {\r\n        TableHelper.setSort(this._tableConfig, col);\r\n    }\r\n\r\n    public getSortClass(colIndex: number): string {\r\n        return TableColHepler.getSortClass(this.tableHeader, colIndex);\r\n    }\r\n\r\n    public isComboFilter(col: TableColumnConfig): boolean {\r\n        if (col.filterType === FilterType.Combo)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    public setFilter() {\r\n        this._applyFilter();\r\n    }\r\n    public trackByFnc(index, item) {\r\n        if (!item) return null;\r\n        return item.serverId;\r\n    }\r\n    private _applyFilter() {\r\n        this.tableHeader.forEach(header => {\r\n            this._serverFilter[header.tableColumns.colName] = header.tableColumns.filterValue;\r\n        });\r\n        this._serverFilter['serverId'] = this._serverFilterId;\r\n        //console.log(this._serverFilterId);\r\n        this._serverVersionsFiltered = this.filterSrv.filterByObject(this._serverVersions, this._serverFilter);\r\n        this._refreshFilterValues();\r\n    }\r\n    private _refreshFilterValues() {\r\n        this.tableHeader.forEach(header => {\r\n            let groups = this.jsFunc.groupBy(this._serverVersionsFiltered, header.tableColumns.colName);\r\n            let values = Object.keys(groups);\r\n            header.tableColumns.filterValues = values.sort();\r\n            \r\n        });\r\n    }\r\n }\r\n\r\nexport const serverVCols: ITableColConfigState[] = [\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: true, orderBy: 0, tableColumns:\r\n            new TableColumnConfig({ colName: \"serverId\", caption: 'ServerId', Sortable: true })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 1, tableColumns:\r\n            new TableColumnConfig({ colName: \"eisv\", caption: 'EISV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 2, tableColumns:\r\n            new TableColumnConfig({ colName: \"eisLocalV\", caption: 'EISLocalV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 3, tableColumns:\r\n            new TableColumnConfig({ colName: \"getDataV\", caption: 'GetDataV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 4, tableColumns:\r\n            new TableColumnConfig({ colName: \"advantageServerV\", caption: 'AdvantageServerV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 5, tableColumns:\r\n            new TableColumnConfig({ colName: \"cprv\", caption: 'CPRV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 6, tableColumns:\r\n            new TableColumnConfig({ colName: \"paServV\", caption: 'PaServV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 7, tableColumns:\r\n            new TableColumnConfig({ colName: \"advOEV\", caption: 'AdvOEV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 8, tableColumns:\r\n            new TableColumnConfig({ colName: \"orderApprovalV\", caption: 'OrderApprovalV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 9, tableColumns:\r\n            new TableColumnConfig({ colName: \"pauSetupV\", caption: 'PAUSetupV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 10, tableColumns:\r\n            new TableColumnConfig({ colName: \"securityAdminV\", caption: 'SecurityAdminV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 11, tableColumns:\r\n            new TableColumnConfig({ colName: \"pockAdvV\", caption: 'PockAdvV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 12, tableColumns:\r\n            new TableColumnConfig({ colName: \"advServV\", caption: 'AdvServV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 13, tableColumns:\r\n            new TableColumnConfig({ colName: \"invMonitorServV\", caption: 'InvMonitorServV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 14, tableColumns:\r\n            new TableColumnConfig({ colName: \"awsServV\", caption: 'AWSServV', Sortable: true, filterType: FilterType.Combo })\r\n    },\r\n    {\r\n        sortDir: SortDirection.ASC, visible: true, sorted: false, orderBy: 15, tableColumns:\r\n            new TableColumnConfig({ colName: \"lastUpdated\", caption: 'Updated', Sortable: true, dataType: DataType.DATE_TIME })\r\n    }\r\n];\r\n","import { Injectable } from '@angular/core';\r\n\r\nInjectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FilterService {\r\n\r\n    private notFilter: boolean = false;\r\n\r\n    public filterByObject(inputArr: any[], filterBy: any[], notFilter: boolean = false): any[] {\r\n        if (!inputArr || !filterBy) return inputArr;\r\n\r\n        this.notFilter = notFilter;\r\n        return inputArr.filter(this.objectFilter(filterBy));\r\n        \r\n    }\r\n\r\n    private objectFilter(filterBy) {\r\n        return value => {\r\n            for (const key in filterBy) {\r\n                if (!this.isMatching(filterBy[key], value[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        };\r\n    }\r\n\r\n    private isMatching(filter, val) {\r\n        switch (typeof filter) {\r\n            case 'boolean':\r\n                return this.filterByBoolean(filter)(val);\r\n            case 'string':\r\n                return this.filterByString(filter)(val);\r\n            case 'object':\r\n                return this.objectFilter(filter)(val);\r\n        }\r\n        return this.filterDefault(filter)(val);\r\n    }\r\n\r\n    private filterDefault(filter: any): (value: any) => boolean {\r\n        if (!this.notFilter)\r\n            return (value: any) => filter === undefined || filter == value;\r\n        else\r\n            return (value: any) => filter !== undefined || filter != value;\r\n    }\r\n\r\n    private filterByString(filter) {\r\n        if (filter) {\r\n            filter = filter.toLowerCase();\r\n        }\r\n        if (!this.notFilter) {\r\n            return value => !filter || (value ? (value).toLowerCase().indexOf(filter) !== -1 : false);\r\n        }\r\n        else {\r\n            return value => !filter || (value ? (value).toLowerCase().indexOf(filter) === -1 : false);\r\n        }\r\n    }\r\n\r\n    private filterByBoolean(filter): (value: any) => boolean {\r\n        if (!this.notFilter)\r\n            return value => value === filter;\r\n        else\r\n            return value => value !== filter;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class JsFuncService {\r\n    public groupBy(objectArray, property) {\r\n        return objectArray.reduce((acc, obj) => {\r\n            const key = obj[property];\r\n            if (!acc[key]) {\r\n                acc[key] = [];\r\n            }\r\n            acc[key] = acc[key] || [];\r\n            acc[key].push(obj);\r\n            return acc;\r\n        }, {});\r\n    }\r\n\r\n    public groupByKeys(objectArray, property) {\r\n        return objectArray.map(item => item[property])\r\n            .filter((value, index, self) => self.indexOf(value) === index)\r\n    }\r\n}\r\n","import { Injectable, OnInit, OnDestroy } from '@angular/core';\r\nimport { ServerListStartUp } from '../models/serverlist.model';\r\nimport { Observable, BehaviorSubject, Subscription, interval } from 'rxjs';\r\nimport { switchMap, startWith, tap } from 'rxjs/operators';\r\nimport { Repository } from '../repository';\r\nimport { versionInfo } from '../helper/versioninfo';\r\nimport { FilterService } from './filter.service';\r\nimport { JsFuncService } from './jsfunc.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ServerListSrv implements OnInit, OnDestroy {\r\n    private _serverListData: ServerListStartUp[] = [];\r\n    private _serverListFiltered: ServerListStartUp[];\r\n    \r\n    private _serverListSub: BehaviorSubject<ServerListStartUp[]>;\r\n    private _serverFilterSub: BehaviorSubject<any>;\r\n    private _lastRefreshSub: BehaviorSubject<Number>;\r\n\r\n    public isLoading: boolean = false;\r\n    \r\n    //Holds filtered parameters\r\n    _serverFilter: any = { serverID: '', catID: '', cprV: '', advantageServerV: '', paServV: '', yellowBox: '' };\r\n    _serverNotFilter: any = { serverID: '' };\r\n    \r\n    //Temporary, need to hold a lot more versions\r\n    cprVersions: versionInfo[] = [];\r\n    advantageSrvV: versionInfo[] = [];\r\n    paServV: versionInfo[] = [];\r\n\r\n    constructor(private repo: Repository, private filterSrv: FilterService, private jsFunc: JsFuncService) {\r\n        this._serverListSub = new BehaviorSubject<ServerListStartUp[]>([]);\r\n        this._serverFilterSub = new BehaviorSubject<any>(this._serverFilter);\r\n        this._lastRefreshSub = new BehaviorSubject<Number>(Date.now());\r\n    }\r\n\r\n    get serverFilter(): Observable<any> {\r\n        return this._serverFilterSub.asObservable();\r\n    }\r\n\r\n    get isFiltered(): boolean {\r\n        return this._serverFilter.serverID.length > 0 || this._serverNotFilter.serverID.length > 0;\r\n    }\r\n\r\n    //Outside components can subscribe the data\r\n    get serverList(): Observable<ServerListStartUp[]> {\r\n        return this._serverListSub.asObservable();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._serverListFiltered = [];\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        //this._pollingTimer.unsubscribe();\r\n    }\r\n\r\n    public refreshData() {\r\n        return this.repo.getServerList()\r\n             .subscribe(result => {\r\n                    this._serverListSub.next(result);\r\n                    this._lastRefreshSub.next(Date.now());\r\n                    this._filterServer();\r\n                    });\r\n    }\r\n\r\n    get serversWithIssues(): Number {\r\n        return this._serverListData.filter(x => x.yellowBox == true).length;\r\n    }\r\n\r\n    get lastRefresh(): Observable<Number> {\r\n        return this._lastRefreshSub.asObservable();\r\n    }\r\n\r\n    public loadData() {\r\n        this.isLoading = true;\r\n        this.repo.getServerList().subscribe(results => {\r\n            this.isLoading = false;\r\n            this._serverListData = results;\r\n            this._serverListFiltered = this._serverListData.slice();\r\n            this._serverListSub.next(results);\r\n            this._filterServer();\r\n            this._lastRefreshSub.next(Date.now());\r\n            this.isLoading = false;\r\n\r\n        });\r\n        //this._pollingTimer.unsubscribe();\r\n\r\n        //this._pollingTimer = interval(this._intervalTimer)\r\n        //    .pipe(\r\n        //        startWith(0),\r\n        //        switchMap(() => this.repo.getServerList())\r\n\r\n        //    )\r\n        //    .subscribe(results => {\r\n        //        this.isLoading = false;\r\n        //        this._serverListData = results;\r\n        //        this._dataStore.serverListFiltered = this._serverListData.slice();\r\n        //        this._serverList.next(Object.assign({}, this._dataStore).serverListFiltered);\r\n        //        this._filterServer();\r\n        //        this.lastRefresh = Date.now();\r\n        //    });\r\n    }\r\n\r\n    public filterByString(serverId: string) {\r\n        this._serverFilter.serverID = serverId;\r\n        this._filterServer();\r\n    }\r\n\r\n    public filterNotByString(serverId: string) {\r\n        this._serverNotFilter['serverID'] = serverId;\r\n        this._filterServer();\r\n    }\r\n\r\n    public filterByYellowBox(val: boolean) {\r\n        this._serverFilter['yellowBox'] = val;\r\n        this._filterServer();\r\n    }\r\n\r\n    private _refreshVersionFilterData() {\r\n        let cprVObject = this.jsFunc.groupBy(this._serverListFiltered, 'cprV');\r\n\r\n        this.cprVersions = Object.keys(cprVObject).map((group) => {\r\n            return new versionInfo(group, cprVObject[group].length, cprVObject[group][0]['ncprV']);\r\n        })\r\n\r\n        let advServV = this.jsFunc.groupBy(this._serverListFiltered, 'advantageServerV');\r\n        this.advantageSrvV = Object.keys(advServV).map((group) => {\r\n            return new versionInfo(group, advServV[group].length, advServV[group][0]['nAdvServerV']);\r\n        })\r\n\r\n        let paServV = this.jsFunc.groupBy(this._serverListFiltered, 'paServV');\r\n        this.paServV = Object.keys(paServV).map((group) => {\r\n            return new versionInfo(group, paServV[group].length, paServV[group][0]['nPaServV']);\r\n        })\r\n    }\r\n\r\n    private _filterServer() {\r\n        this._serverListFiltered = this.filterSrv.filterByObject(this._serverListData, this._serverFilter);\r\n        if (this._serverNotFilter['serverID'].length > 0) {\r\n            this._serverListFiltered = this.filterSrv.filterByObject(this._serverListFiltered, this._serverNotFilter, true);\r\n        }\r\n        this._refreshVersionFilterData();\r\n        this._serverFilterSub.next(this._serverFilter);\r\n        this._serverListSub.next(this._serverListFiltered);\r\n    }\r\n\r\n    //filterByCprV(event) {\r\n    //    this.serverFilter.cprV = event;\r\n    //    this._filterServer();\r\n    //}\r\n\r\n    //filterByAdvServV(event) {\r\n    //    this.serverFilter.advantageServerV = event;\r\n    //    this._filterServer();\r\n    //}\r\n\r\n    //filterByPaServ(event) {\r\n    //    this.serverFilter.paServV = event;\r\n    //    this._filterServer();\r\n    //}\r\n\r\n    //resetVersionFilters() {\r\n    //    this.versionFilters.forEach(ver => {\r\n    //        ver.resetFilter();\r\n    //    });\r\n    //}\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SortService {\r\n\r\n    private _objArrayCheck(array: any[]): boolean {\r\n        const item0 = array[0];\r\n        const check = !!(array.length && item0 !== null && Object.prototype.toString.call(item0) === '[object Object]');\r\n\r\n        return check;\r\n    }\r\n\r\n    private stringSort(input: any[], field: string, asc: boolean) {\r\n        const sorted = input.sort((a, b) => {\r\n            var returnVal = 0;\r\n            if (a[field] < b[field])\r\n                returnVal = -1;\r\n            if (a[field] > b[field])\r\n                returnVal = 1;\r\n\r\n            return asc ? returnVal : returnVal * -1;\r\n        });\r\n\r\n        return sorted;\r\n    }\r\n\r\n    private numericSort(arrayInput: any[], field: string, asc: boolean) {\r\n        const sorted = arrayInput.sort((a, b) => {\r\n            if (a[field] === b[field]) {\r\n                return 0;\r\n            } else if (a[field] === null) {\r\n                return asc ? 1 : -1;\r\n            } else if (b[field] === null) {\r\n                return asc ? -1 : 1;\r\n            } else {\r\n                return asc ? a[field] - b[field] : b[field] - a[field];\r\n            }\r\n        });\r\n\r\n        return sorted;\r\n    }\r\n    public sortObject(arrayInput: any[], field: string, asc: boolean = true) {\r\n\r\n        if (!arrayInput)\r\n            return;\r\n\r\n        if (!field || !this._objArrayCheck(arrayInput)) {\r\n            return;\r\n        }\r\n\r\n        if (typeof arrayInput[0][field] === 'string' || arrayInput[field] instanceof String) {\r\n            return this.stringSort(arrayInput, field, asc);\r\n        }\r\n        else if (typeof arrayInput[0][field] === 'number') {\r\n            return this.numericSort(arrayInput, field, asc);\r\n        }\r\n        else {\r\n            return this.stringSort(arrayInput, field, asc);\r\n        }\r\n        \r\n    }\r\n}\r\n","\r\nexport interface ITableConfigState {\r\n    tableColConfig: ITableColConfigState[];\r\n    currentSortCol: number;\r\n    currentSortColName: string;\r\n}\r\n\r\nexport interface ITableColConfigState {\r\n    tableColumns: TableColumnConfig; //Column meta data\r\n    sorted: boolean; //Is this column currently sorted?\r\n    sortDir: SortDirection; //What direction is it sorted?\r\n    visible: boolean; //Is it visible on the screen?\r\n    orderBy: number; //Order of column on screen\r\n};\r\n\r\nexport class TableColumnConfig {\r\n    colName: string; //Unique name of column\r\n    sortCol: string; //name of column, some columns use a different column to sort, eg vCPR might use nvCPR\r\n    toolTip: string; //tooltip shown on col header\r\n    Sortable: boolean; //Is this column sortable\r\n    nonConfigurable: boolean; //Can this column be turned visible or not?  some have to stay visible, like ServerID\r\n    caption: string; //Display column header\r\n    dataType: DataType;\r\n    systemCol: boolean;\r\n    orderBy: number;\r\n    filterType: FilterType;\r\n    filterValues: string[];\r\n    filterValue: string;\r\n    filterCount: any;\r\n\r\n    constructor({ colName, sortCol = '', toolTip = '',\r\n        Sortable = true, nonConfigurable = false,\r\n        caption = '', dataType = DataType.DEFAULT, systemCol = false, filterType = FilterType.TextBox }: {\r\n            colName: string;\r\n            toolTip?: string;\r\n            Sortable?: boolean;\r\n            nonConfigurable?: boolean;\r\n            sortCol?: string;\r\n            caption?: string;\r\n            dataType?: DataType;\r\n            systemCol?: boolean;\r\n            filterType?: FilterType;\r\n        }\r\n        ) {\r\n        this.filterValues = [];\r\n        this.colName = colName;\r\n        this.toolTip = toolTip;\r\n        this.Sortable = Sortable;\r\n        this.nonConfigurable = nonConfigurable;\r\n        this.sortCol = sortCol;\r\n        this.caption = caption;\r\n        this.dataType = dataType;\r\n        this.systemCol = systemCol;\r\n        this.filterType = filterType;\r\n        this.filterValue = '';\r\n        this.filterCount = {};\r\n        if (sortCol.length == 0) {\r\n            this.sortCol = this.colName;\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport class TableHelper {\r\n\r\n    public static setSort(tableHeader: ITableConfigState, col: number) {\r\n        if (tableHeader.tableColConfig[col].tableColumns.Sortable) {\r\n            tableHeader.tableColConfig.forEach(c => {\r\n                c.sorted = false;\r\n            });\r\n            tableHeader.currentSortCol = col;\r\n            tableHeader.currentSortColName = tableHeader.tableColConfig[col].tableColumns.colName;\r\n            tableHeader.tableColConfig[col].sorted = true;\r\n            tableHeader.tableColConfig[col].sortDir = TableColHepler.switchNextSort(tableHeader.tableColConfig[col].sortDir);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class TableColHepler {\r\n    public static getSortIconClass(sortDir: SortDirection): string {\r\n        switch (sortDir) {\r\n            case SortDirection.ASC:\r\n                return 'fa fa-sort-asc';\r\n            case SortDirection.DESC:\r\n                return 'fa fa-sort-desc';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    public static getSortClass(tableHeader: ITableColConfigState[], colIndex: number): string {\r\n        if (tableHeader[colIndex].sorted == true) {\r\n            return TableColHepler.getSortIconClass(tableHeader[colIndex].sortDir);\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    public static isDropDownCombo(filterType: FilterType): boolean {\r\n        if (filterType == FilterType.Combo)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    public static isAsc(sortDir: SortDirection): boolean {\r\n        switch (sortDir) {\r\n            case SortDirection.ASC:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    public static switchNextSort(sortDir: SortDirection): SortDirection {\r\n        switch (sortDir) {\r\n            case SortDirection.ASC:\r\n                return SortDirection.DESC;\r\n            case SortDirection.DESC:\r\n                return SortDirection.ASC;\r\n            default:\r\n                return SortDirection.ASC;\r\n        }\r\n    }\r\n}\r\n\r\nexport enum DataType {\r\n    DEFAULT,\r\n    DATE_TIME\r\n}\r\n\r\nexport enum SortDirection {\r\n    NONE,\r\n    ASC,\r\n    DESC\r\n}\r\n\r\nexport enum FilterType {\r\n    TextBox,\r\n    Combo\r\n}\r\n","module.exports = \".webTableStyle {\\r\\n    float: left;\\r\\n    width: 100%;\\r\\n    border-collapse: collapse;\\r\\n  \\r\\n}\\r\\n\\r\\nth.unsortable {\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\ntr {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmVybGlzdC90YWJsZS90YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLFdBQVc7SUFDWCx5QkFBeUI7O0FBRTdCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9zZXJ2ZXJsaXN0L3RhYmxlL3RhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud2ViVGFibGVTdHlsZSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBcclxufVxyXG5cclxudGgudW5zb3J0YWJsZSB7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbn1cclxuXHJcbnRyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ITableColConfigState, TableColumnConfig, TableColHepler } from './table-column-config';\r\nimport { SortService } from '../services/sort.service';\r\n\r\n@Component({\r\n    selector: 'webTable',\r\n    templateUrl: 'table.component.html',\r\n    styleUrls: ['table.component.css']\r\n})\r\nexport class WebTableComponent {\r\n    @Input()\r\n    columnsConfig: ITableColConfigState[];\r\n\r\n    @Input()\r\n    tableData: any[];\r\n\r\n    @Input()\r\n    multiRowSelect: boolean = false;\r\n\r\n    currentSortCol: number = 0;\r\n\r\n    constructor(public sortSrv: SortService) { }\r\n\r\n    get configurableCols(): TableColumnConfig[] {\r\n        return this.columnsConfig.filter(cols => cols.visible == true).map(colObj => colObj.tableColumns);\r\n    }\r\n\r\n    get currentSortColName(): string {\r\n        return this.columnsConfig[this.currentSortCol].tableColumns.colName;\r\n    }\r\n    \r\n    getSortClass(colIndex: number): string {\r\n        if (this.columnsConfig[colIndex].sorted == true) {\r\n            return TableColHepler.getSortIconClass(this.columnsConfig[colIndex].sortDir);\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    setSort(col: number) {\r\n        if (this.columnsConfig[col].tableColumns.Sortable) {\r\n            for (var i = 0, len = this.columnsConfig.length; i < len; i++) {\r\n                this.columnsConfig[i].sorted = false;\r\n            }\r\n            this.currentSortCol = col;\r\n            this.columnsConfig[col].sorted = true;\r\n            this.columnsConfig[col].sortDir = TableColHepler.switchNextSort(this.columnsConfig[col].sortDir);\r\n        }\r\n\r\n    }\r\n\r\n    get isAsc(): boolean {\r\n        return TableColHepler.isAsc(this.columnsConfig[this.currentSortCol].sortDir);\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}